{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/manager/add-department/add-department/add-department.component.ts","./src/app/components/manager/add-department/add-department/add-department.component.html","./src/app/components/manager/add-expenseCategory/add-expense-category/add-expense-category.component.ts","./src/app/components/manager/add-expenseCategory/add-expense-category/add-expense-category.component.html","./src/app/components/manager/choose-department/choose-department/choose-department.component.ts","./src/app/components/manager/choose-department/choose-department/choose-department.component.html","./src/app/components/manager/home-manager/home-manager/home-manager.component.ts","./src/app/components/manager/home-manager/home-manager/home-manager.component.html","./src/app/components/manager/navbar-manager/navbar-manager/navbar-manager.component.ts","./src/app/components/manager/navbar-manager/navbar-manager/navbar-manager.component.html","./src/app/components/secretary/add-event/add-event.component.ts","./src/app/components/secretary/add-event/add-event.component.html","./src/app/components/secretary/add-expense/add-expense.component.ts","./src/app/components/secretary/add-expense/add-expense.component.html","./src/app/components/secretary/add-monthly-cash-register/add-monthly-cash-register.component.ts","./src/app/components/secretary/add-monthly-cash-register/add-monthly-cash-register.component.html","./src/app/components/secretary/close-month/close-monthly-activities/close-monthly-activities.component.ts","./src/app/components/secretary/create-update-event-category/create-update-event-category.component.ts","./src/app/components/secretary/create-update-event-category/create-update-event-category.component.html","./src/app/components/secretary/home-secretary/home-secretary.component.ts","./src/app/components/secretary/home-secretary/home-secretary.component.html","./src/app/components/secretary/navbar/navbar.component.ts","./src/app/components/secretary/navbar/navbar.component.html","./src/app/components/shared/budget-information/budget-information.component.ts","./src/app/components/shared/budget-information/budget-information.component.html","./src/app/components/shared/choose-language/choose-language.component.ts","./src/app/components/shared/choose-language/choose-language.component.html","./src/app/components/shared/expense-report/expense-report.component.ts","./src/app/components/shared/expense-report/expense-report.component.html","./src/app/components/shared/expenses-report-previous-months/expenses-report-previous-months.component.ts","./src/app/components/shared/expenses-report-previous-months/expenses-report-previous-months.component.html","./src/app/components/shared/monthly-cash-register/monthly-cash-register.component.ts","./src/app/components/shared/monthly-cash-register/monthly-cash-register.component.html","./src/app/components/shared/previous-expenses/previous-expenses.component.ts","./src/app/components/shared/previous-expenses/previous-expenses.component.html","./src/app/components/shared/sign-in/sign-in.component.ts","./src/app/components/shared/sign-in/sign-in.component.html","./src/app/components/shared/user-profile/user-profile.component.ts","./src/app/components/shared/user-profile/user-profile.component.html","./src/app/models/monthlyCashRegister.ts","./src/app/services/additional-actions-service/additional-actions.service.ts","./src/app/services/auth-service/auth.service.ts","./src/app/services/auth-service/authconfig.interceptor.ts","./src/app/services/budget-information-service/budget-imformation.service.ts","./src/app/services/budgetType-service/budget-type.service.ts","./src/app/services/buyer-service/buyer.service.ts","./src/app/services/customMessage-service/custom-message.service.ts","./src/app/services/department-service/department.service.ts","./src/app/services/event-service/event-category.service.ts","./src/app/services/event-service/event.service.ts","./src/app/services/expense-service/expense-category.service.ts","./src/app/services/expense-service/expense-report-info.service.ts","./src/app/services/expense-service/expense.service.ts","./src/app/services/montlyCashRegister-service/montly-cash-register.service.ts","./src/main.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChooseLanguageComponent } from './components/shared/choose-language/choose-language.component';\r\nimport { HomeSecretaryComponent } from './components/secretary/home-secretary/home-secretary.component';\r\nimport { AddEventComponent } from './components/secretary/add-event/add-event.component';\r\nimport { AddExpenseComponent } from './components/secretary/add-expense/add-expense.component';\r\nimport { ExpenseReportComponent } from './components/shared/expense-report/expense-report.component';\r\nimport { SignInComponent } from './components/shared/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './components/shared/user-profile/user-profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NavbarComponent } from './components/secretary/navbar/navbar.component';\r\nimport { PreviousExpensesComponent } from './components/shared/previous-expenses/previous-expenses.component';\r\nimport { HomeManagerComponent } from './components/manager/home-manager/home-manager/home-manager.component';\r\nimport { NavbarManagerComponent } from './components/manager/navbar-manager/navbar-manager/navbar-manager.component';\r\nimport { CloseMonthlyActivitiesComponent } from './components/secretary/close-month/close-monthly-activities/close-monthly-activities.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: '', component: HomeManagerComponent },\r\n  { path: '', component: SignInComponent },\r\n  { path: 'login', component: SignInComponent },\r\n  // {\r\n  //   path: 'user-profile/:id',\r\n  //   component: UserProfileComponent,\r\n  //   canActivate: [AuthGuard],\r\n  // },\r\n  { path: 'choose-language', component: ChooseLanguageComponent },\r\n  {\r\n    path: 'navbar-secretary',\r\n    component: NavbarComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'home-secretary', pathMatch: 'full' },\r\n      { path: 'home-secretary', component: HomeSecretaryComponent },\r\n      { path: 'add-event', component: AddEventComponent },\r\n      { path: 'add-expense', component: AddExpenseComponent },\r\n      { path: 'expense-report', component: ExpenseReportComponent },      \r\n      { path: 'previous-expenses', component: PreviousExpensesComponent},\r\n      { path: 'close-monthly-activities', component: CloseMonthlyActivitiesComponent}\r\n    ],\r\n  },\r\n  { path: 'home-manager', component:HomeManagerComponent},\r\n  { path: 'navbar-manager', \r\n    component:NavbarManagerComponent,\r\n    children:[\r\n      { path: '', redirectTo: 'home-secretary', pathMatch: 'full' },\r\n      { path: 'home-secretary', component: HomeSecretaryComponent },\r\n      { path: 'expense-report', component: ExpenseReportComponent },   \r\n      { path: 'previous-expenses', component: PreviousExpensesComponent},\r\n      { path: 'close-monthly-activities', component: CloseMonthlyActivitiesComponent}\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Petty-cash Neve Yerushalayim';\r\n  constructor() {}\r\n\r\n  selectedLanguage: string = 'en-US';\r\n}\r\n","<div [class.hebrew-style]=\"selectedLanguage === 'he-IL'\">\r\n    <choose-language></choose-language>\r\n    <!-- <navbar></navbar> -->\r\n    <router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CardModule } from 'primeng/card';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ScrollerModule } from 'primeng/scroller';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ListboxModule } from 'primeng/listbox';\r\n\r\nimport { NavbarComponent } from './components/secretary/navbar/navbar.component';\r\nimport { HomeManagerComponent } from './components/manager/home-manager/home-manager/home-manager.component';\r\nimport { HomeSecretaryComponent } from './components/secretary/home-secretary/home-secretary.component';\r\nimport { ChooseLanguageComponent } from './components/shared/choose-language/choose-language.component';\r\nimport { ExpenseReportComponent } from './components/shared/expense-report/expense-report.component';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { MonthlyCashRegisterComponent } from './components/shared/monthly-cash-register/monthly-cash-register.component';\r\nimport { BudgetInformationComponent } from './components/shared/budget-information/budget-information.component';\r\nimport { ExpensesReportPreviousMonthsComponent } from './components/shared/expenses-report-previous-months/expenses-report-previous-months.component';\r\nimport { AddExpenseComponent } from './components/secretary/add-expense/add-expense.component';\r\nimport { AddEventComponent } from './components/secretary/add-event/add-event.component';\r\nimport { CreateUpdateEventCategoryComponent } from './components/secretary/create-update-event-category/create-update-event-category.component';\r\nimport { SignInComponent } from './components/shared/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './components/shared/user-profile/user-profile.component';\r\nimport { AuthService } from './services/auth-service/auth.service';\r\nimport { AuthInterceptor } from './services/auth-service/authconfig.interceptor';\r\nimport { PreviousExpensesComponent } from './components/shared/previous-expenses/previous-expenses.component';\r\nimport { CustomMessageService } from './services/customMessage-service/custom-message.service';\r\nimport { AddMonthlyCashRegisterComponent } from './components/secretary/add-monthly-cash-register/add-monthly-cash-register.component';\r\nimport { CloseMonthlyActivitiesComponent } from './components/secretary/close-month/close-monthly-activities/close-monthly-activities.component';\r\nimport { ChooseDepartmentComponent } from './components/manager/choose-department/choose-department/choose-department.component';\r\nimport { AddDepartmentComponent } from './components/manager/add-department/add-department/add-department.component';\r\nimport { AddExpenseCategoryComponent } from './components/manager/add-expenseCategory/add-expense-category/add-expense-category.component';\r\nimport { NavbarManagerComponent } from './components/manager/navbar-manager/navbar-manager/navbar-manager.component';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeManagerComponent,\r\n    HomeSecretaryComponent,\r\n    ChooseLanguageComponent,\r\n    ExpenseReportComponent,\r\n    NavbarComponent,\r\n    MonthlyCashRegisterComponent,\r\n    BudgetInformationComponent,\r\n    ExpensesReportPreviousMonthsComponent,\r\n    AddExpenseComponent,\r\n    AddEventComponent,\r\n    CreateUpdateEventCategoryComponent,\r\n    SignInComponent,\r\n    UserProfileComponent,\r\n    PreviousExpensesComponent,\r\n    AddMonthlyCashRegisterComponent,\r\n    CloseMonthlyActivitiesComponent,\r\n    ChooseDepartmentComponent,\r\n    AddDepartmentComponent,\r\n    AddExpenseCategoryComponent,\r\n    NavbarManagerComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    PaginatorModule,\r\n    ToastModule,\r\n    TabMenuModule,\r\n    InputTextModule,\r\n    DropdownModule,\r\n    InputNumberModule,\r\n    CalendarModule,\r\n    DialogModule,\r\n    TabViewModule,\r\n    CardModule,\r\n    PasswordModule,\r\n    ScrollerModule,\r\n    OrderListModule,\r\n    ConfirmPopupModule,\r\n    ListboxModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    ConfirmationService,\r\n    CustomMessageService,\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { BudgetTypeService } from 'src/app/services/budgetType-service/budget-type.service';\r\nimport { DepartmentService } from 'src/app/services/department-service/department.service';\r\n\r\n@Component({\r\n  selector: 'add-department',\r\n  templateUrl: './add-department.component.html',\r\n  styleUrls: ['./add-department.component.scss']\r\n})\r\nexport class AddDepartmentComponent implements OnInit{\r\n  departmentDialog: boolean = false;\r\n  formGroup!: FormGroup;\r\n  validForm: boolean = true;\r\n  budgetTypeList: any[] = [];\r\n\r\n  constructor(\r\n    private formBuilder:FormBuilder,\r\n    private budgetTypeService: BudgetTypeService,\r\n    private departmentService:DepartmentService) {}\r\n\r\n  ngOnInit(){\r\n    this.initializeForm();\r\n    this.loadBudgetType();\r\n  }\r\n\r\n  loadBudgetType(){\r\n    this.budgetTypeService.getBudgetTypes().subscribe(\r\n      (data) => {\r\n        this.budgetTypeList = data.data;\r\n      },\r\n      (error) => {\r\n        this.budgetTypeList = [\r\n          { id: 1, name: \"annual budget\" },\r\n          { id: 2, name: \"monthly budget\" }\r\n        ];\r\n        console.error('An error occurred:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  isInvalid(controlName: string): boolean {\r\n    const control: AbstractControl | null = this.formGroup.get(controlName);\r\n    return control ? control.touched && control.invalid : false;\r\n  }\r\n\r\n  initializeForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      departmentName: new FormControl<string | null>(null, Validators.required),\r\n      departmentCode: new FormControl<string | null>(null, Validators.required),\r\n      deptHeadFirstName: new FormControl<string | null>(null, Validators.required),\r\n      deptHeadLastName: new FormControl<string | null>(null, Validators.required),\r\n      phonePerfix: new FormControl<string | null>(null, Validators.required),\r\n      phoneNumber: new FormControl<string | null>(null, Validators.required),\r\n      descreption: new FormControl<string | null>(null),\r\n      budgetTypeId: new FormControl<number | null>(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  addDepartment(){\r\n    this.departmentDialog = true;\r\n  }\r\n\r\n  async saveDepartment(){\r\n    if(this.validForm){\r\n      const newDepartment = {\r\n\r\n      }\r\n\r\n      try{\r\n      }catch(error){\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n","<button pButton id=\"departmentDialog\" (click)=\"addDepartment()\">new department</button>\r\n<p-dialog id=\"p-dialog\" [(visible)]=\"departmentDialog\" [style]=\"{width:'600px'}\" header=\"new department\" [modal]=\"true\" styleClass=\"p-fluid\" >\r\n    <div *ngIf=\"formGroup\" id=\"form\">\r\n        <form [formGroup]=\"formGroup\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department name' | translate\" pInputText formControlName=\"departmentName\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('departmentName')\" translate>addDepartment.Please enter a department name</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department code' | translate\" pInputText formControlName=\"departmentCode\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('departmentCode')\" translate>addDepartment.Please enter a department code</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department head first name' | translate\" pInputText formControlName=\"deptHeadFirstName\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('deptHeadFirstName')\" translate>addDepartment.Please enter a department head first name</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department head last name' | translate\" pInputText formControlName=\"deptHeadLastName\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('deptHeadLastName')\" translate>addDepartment.Please enter a department name</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department phonePerfix' | translate\" pInputText formControlName=\"phonePerfix\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('phonePerfix')\" translate>addDepartment.Please enter a department phonePerfix</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department phone number' | translate\" pInputText formControlName=\"phoneNumber\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('phoneNumber')\" translate>addDepartment.Please enter a department phone number</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addDepartment.Department descreption' | translate\" pInputText formControlName=\"descreption\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('descreption')\" translate>addDepartment.Please enter a department descreption</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p-dropdown formControlName=\"budgetTypeId\" [options]=\"budgetTypeList\" [placeholder]=\"'addDepartment.budget type' | translate\" optionLabel=\"name\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n                <div>\r\n                  <small *ngIf=\"isInvalid('budgetTypeId')\" translate>addDepartment.Please select an budget type.</small>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n                <button pButton type=\"button\" (click)=\"saveDepartment()\" class=\"centered-button\">{{'addDepartment.Add department' | translate}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { ExpenseCategoryService } from 'src/app/services/expense-service/expense-category.service';\r\n\r\n@Component({\r\n  selector: 'add-expense-category',\r\n  templateUrl: './add-expense-category.component.html',\r\n  styleUrls: ['./add-expense-category.component.scss']\r\n})\r\nexport class AddExpenseCategoryComponent implements OnInit {\r\n  expenseCategoryDialog:boolean = false;\r\n  selectedExpenseCategory:any;\r\n  existingExpensesCategory:any[] = [];\r\n  formGroup!:FormGroup;\r\n  validForm:boolean = true;\r\n\r\n  constructor(\r\n    private formBuilder:FormBuilder,\r\n    private expenseCategoryService:ExpenseCategoryService,\r\n    private confirmationService:ConfirmationService,\r\n    private customMessageService:CustomMessageService\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.loadExpensesCategory();\r\n    this.initializeForm();\r\n  }\r\n\r\n  addExpenseCategory(){\r\n    this.expenseCategoryDialog = true;\r\n  }\r\n\r\n  loadExpensesCategory(){\r\n    this.expenseCategoryService.getAllExpenseCategories().subscribe(\r\n      (data) => {\r\n        this.existingExpensesCategory = data.data;\r\n        console.log(this.existingExpensesCategory);\r\n      },\r\n      (error) => {\r\n        this.existingExpensesCategory = [\r\n          {id:1, name:\"food\"},\r\n          {id:2, name:\"taxi\"},\r\n          {id:3, name:\"lactures\"}\r\n        ]\r\n        console.error('An error occurred:', error);        \r\n      },\r\n    );\r\n  }\r\n\r\n  isInvalid(controlName: string): boolean {\r\n    const control: AbstractControl | null = this.formGroup.get(controlName);\r\n    return control ? control.touched && control.invalid : false;\r\n  }\r\n\r\n  initializeForm(){\r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      expenseCategoryName: new FormControl<string|null>(null, Validators.required),\r\n      expenseCategoryCode:new FormControl<string|null>(null,Validators.required)\r\n    });\r\n  }\r\n\r\n  deleteExpenseCategory(event: Event, expenseCategory:any) {\r\n    const expenseCategoryIdToDelete = expenseCategory.id;\r\n    console.log(expenseCategoryIdToDelete)\r\n    this.confirmationService.confirm({\r\n        target: event.target as EventTarget,\r\n        message: 'Do you want to delete this expense category?',\r\n        icon: 'pi pi-info-circle',\r\n        acceptButtonStyleClass: ' p-button-sm',\r\n        accept: () => {\r\n          this.expenseCategoryService.deleteExpenseCategory(expenseCategoryIdToDelete).subscribe(\r\n            (data) => {\r\n              console.log('expense category is deleted', data);\r\n              this.customMessageService.showSuccessMessage('Expense category is deleted');\r\n              this.existingExpensesCategory = this.existingExpensesCategory.filter((val) => val.expenseCategory.id !== expenseCategoryIdToDelete);\r\n            },\r\n            (error) => {\r\n              console.error('An error occurred:', error);\r\n              this.customMessageService.showErrorMessage('An error occurred while deleting the expense category');\r\n            }\r\n          );        \r\n        },\r\n        reject: () => {\r\n          this.customMessageService.showRejectedMessage('You have rejected');\r\n        }\r\n    });\r\n  }\r\n\r\n  saveExpenseCategory(){\r\n    \r\n  }\r\n}\r\n","<button pButton id=\"expenseCategoryDialog\" (click)=\"addExpenseCategory()\">new expense category</button>\r\n<p-toast></p-toast>\r\n<p-dialog id=\"p-dialog\" [(visible)]=\"expenseCategoryDialog\" [style]=\"{width:'75rem'}\" [modal]=\"true\" styleClass=\"p-fluid\" >\r\n  <div id=\"AddExpenseDialog\">\r\n    <div id=\"expenseCategoryList\" *ngIf=\"existingExpensesCategory\">\r\n      <div class=\"card flex justify-content-center\">\r\n        <h4>existingExpensesCategory</h4>\r\n        <p-listbox [options]=\"existingExpensesCategory\" [(ngModel)]=\"selectedExpenseCategory\" optionLabel=\"name\" [style]=\"{'width':'20rem'}\" [listStyle]=\"{'max-height': '220px'}\">\r\n          <ng-template let-expenseCategory pTemplate=\"item\">\r\n            <div class=\"expensesCategoryList\">\r\n              <p-confirmPopup></p-confirmPopup>\r\n              <div (click)=\"deleteExpenseCategory($event, expenseCategory)\">\r\n                <i class=\"fa fa-trash\"></i>  \r\n              </div>\r\n              <span class=\"font-bold\">{{ expenseCategory.name }}</span>\r\n            </div>\r\n          </ng-template>\r\n        </p-listbox>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"expenseCategoryform\">\r\n      <h4>add new expense category</h4>\r\n        <form [formGroup]=\"formGroup\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addExpenseCategory.expense category name' | translate\" pInputText formControlName=\"expenseCategoryName\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('expenseCategoryName')\" translate>addDepartment.Please enter a expense category name</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" [placeholder]=\"'addExpenseCategory.expense category code' | translate\" pInputText formControlName=\"expenseCategoryCode\">\r\n                <div>\r\n                    <small *ngIf=\"isInvalid('expenseCategoryCode')\" translate>addDepartment.Please enter expense category code</small>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n                <button pButton type=\"button\" (click)=\"saveExpenseCategory()\" class=\"centered-button\">{{'addDepartment.Add department' | translate}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  </div>\r\n</p-dialog>\r\n\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { DepartmentService } from 'src/app/services/department-service/department.service';\r\n\r\n@Component({\r\n  selector: 'choose-department',\r\n  templateUrl: './choose-department.component.html',\r\n  styleUrls: ['./choose-department.component.scss']\r\n})\r\nexport class ChooseDepartmentComponent implements OnInit {\r\n  departments: any[] = [];\r\n  formGroup!: FormGroup;\r\n\r\n  constructor(\r\n    private departmentService: DepartmentService,\r\n    private router: Router,\r\n    private authService:AuthService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadDepartments();\r\n    this.initializeForm();\r\n  }\r\n\r\n  loadDepartments() {\r\n    this.departmentService.getAllDepartments().subscribe(\r\n      (data) => {\r\n        this.departments = data.data;\r\n        console.log(this.departments)\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred', error)\r\n      }\r\n    )\r\n  }\r\n\r\n  initializeForm() {\r\n    this.formGroup = new FormGroup({\r\n      selectedDepartment: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  onDropdownChange() {\r\n    const selectedDepartment = this.formGroup.get('selectedDepartment')?.value;\r\n\r\n    if (selectedDepartment) {\r\n      // Save the selected department in localStorage using your service\r\n      this.departmentService.saveSelectedDepartmentToLocalStorage(selectedDepartment);\r\n      this.authService.updateCurrentUserDepartmentId(selectedDepartment.departmentId);\r\n\r\n      // Navigate to the 'navbar-selected-department' route\r\n      this.router.navigate(['/navbar-manager']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"card flex justify-content-center\">\r\n    <form [formGroup]=\"formGroup\">\r\n      <p-dropdown\r\n        formControlName=\"selectedDepartment\"\r\n        [options]=\"departments\"\r\n        optionLabel=\"departmentName\"\r\n        placeholder=\"Select a Department\"\r\n        [style]=\"{\r\n          'width': '450px',\r\n          'height': '100px',\r\n          'background-color': '#6381ac',\r\n          'border-radius': '15px'\r\n        }\"\r\n        (onChange)=\"onDropdownChange()\"\r\n      ></p-dropdown>\r\n    </form>\r\n  </div>\r\n  ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home-manager',\r\n  templateUrl: './home-manager.component.html',\r\n  styleUrls: ['./home-manager.component.scss']\r\n})\r\nexport class HomeManagerComponent {\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div id=\"choose-department\">\r\n        <choose-department></choose-department>\r\n    </div>\r\n    <div>\r\n        <add-department></add-department>\r\n    </div>\r\n    <div>\r\n        <add-expense-category></add-expense-category>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api/menuitem';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { DepartmentService } from 'src/app/services/department-service/department.service';\r\n\r\n@Component({\r\n  selector: 'navbar-manager',\r\n  templateUrl: './navbar-manager.component.html',\r\n  styleUrls: ['./navbar-manager.component.scss']\r\n})\r\nexport class NavbarManagerComponent {\r\n  dropdownOptions: any[] = [\r\n    { label: 'Option 1', value: 'option1' },\r\n    { label: 'Option 2', value: 'option2' },\r\n    // Add more options as needed\r\n  ];\r\n  items: MenuItem[] | undefined;\r\n  activeItem: MenuItem | undefined;\r\n  selectedDepartment: any;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private departmentService:DepartmentService,\r\n    private authService:AuthService,\r\n    private router: Router,\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loadDetails();\r\n  }\r\n\r\n  loadDetails(){\r\n    this.selectedDepartment = this.departmentService.getSelectedDepartment();\r\n    this.currentUser = this.authService.getCurrentUser();\r\n  }\r\n  isActiveRoute(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n\r\n  onActiveItemChange(event: MenuItem) {\r\n    this.activeItem = event;\r\n  }\r\n\r\n  logOut() {\r\n    this.departmentService.deactivateSelectedDepartment();\r\n    this.router.navigate(['/home-manager']);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <nav>\r\n      <ul class=\"nav-list\">\r\n        <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-manager/home-secretary') }\">\r\n          <a routerLink=\"/navbar-manager/home-secretary\" translate>navbar.Home</a>\r\n        </li>\r\n        <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-manager/expense-report') }\">\r\n          <a routerLink=\"/navbar-manager/expense-report\" translate>navbar.Approval of the monthly report</a>\r\n        </li>\r\n        <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-manager/previous-expenses') }\">\r\n          <a routerLink=\"/navbar-manager/expense-report\" translate>navbar.View previous months</a>\r\n        </li>\r\n      </ul>\r\n      <div class=\"nav-info\">  \r\n        <div>\r\n        <p>{{selectedDepartment?.name }}</p>\r\n        <p>{{currentUser?.username}}</p>\r\n      </div>\r\n      <div>\r\n        <i class=\"fa-sharp fa-solid fa-arrow-right-from-bracket\" (click)=\"logOut()\"></i>\r\n      </div>\r\n      </div>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EventCategory } from 'src/app/models/eventCategory';\r\nimport { Event } from 'src/app/models/event';\r\nimport { EventCategoryService } from 'src/app/services/event-service/event-category.service';\r\nimport { EventService } from 'src/app/services/event-service/event.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'add-event',\r\n  templateUrl: './add-event.component.html',\r\n  styleUrls: ['./add-event.component.scss'],\r\n})\r\nexport class AddEventComponent implements OnInit {\r\n  eventCategories: EventCategory[] = [];\r\n  existingEvents: Event[] = [];\r\n  formGroup!: FormGroup;\r\n  selectedExistingEvent: Event | undefined;\r\n  validForm: boolean = true;\r\n  initiallySelectedEvent: Event | null = null;\r\n  isMonthlyCashRegister:boolean = false;\r\n\r\n  constructor(\r\n    private translateService:TranslateService,\r\n    private formBuilder: FormBuilder,\r\n    private eventService: EventService,\r\n    private eventCategoryService: EventCategoryService,\r\n    private router:Router,\r\n    private customMessageService:CustomMessageService,\r\n    private monthlyCashRegisterService: MontlyCashRegisterService,\r\n    ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadExistingEvents();\r\n    this.loadEventCategories();\r\n    this.initializeForm();\r\n    this.isMonthlyRegister();\r\n  }\r\n\r\n  isMonthlyRegister(){\r\n    const isMonthlyRegisterSet = this.monthlyCashRegisterService.getCurrentMothlyRegister();\r\n    if(isMonthlyRegisterSet)\r\n    this.isMonthlyCashRegister = true;\r\n  }\r\n\r\n  loadEventCategories() {\r\n    this.eventCategoryService.getEventsCategories().subscribe(\r\n      (data) => {\r\n        this.eventCategories = data.data;\r\n        console.log(\"eventcategories\",this.eventCategories);\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  loadExistingEvents() {\r\n    this.eventService.getEventsByUser().subscribe(\r\n      (data) => {\r\n        this.existingEvents = data.data;\r\n        console.log(this.existingEvents);\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);        \r\n      },\r\n    );\r\n  }\r\n\r\n  getOptionLabel(){\r\n    return this.translateService.currentLang === 'en-US'? 'eventCategoryName':'eventCategoryNameHeb';\r\n  }\r\n\r\n  initializeForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      selectedEventCategory: new FormControl<any | null>(null,Validators.required),\r\n      eventName: new FormControl<string>('', Validators.required),\r\n    });\r\n  }\r\n\r\n  addEvent() {\r\n  this.validForm = !this.formGroup.invalid;\r\n  if(this.validForm && this.isMonthlyCashRegister){\r\n    const currentMonth = this.monthlyCashRegisterService.getCurrentMothlyRegister().monthlyCashRegisterMonth;\r\n    const newEvent = {\r\n      eventId: 0,\r\n      eventName: this.formGroup.value.eventName,\r\n      eventMonth: currentMonth,\r\n      eventCategoryId: this.formGroup.value.selectedEventCategory.eventCategoryId,\r\n      updatedBy: \"string\"\r\n    };\r\n\r\n    console.log(\"New Event: \", newEvent);\r\n    this.eventService.addNewEvent(newEvent).subscribe(\r\n      (response) => {\r\n        console.log('Event added successfully:', response);\r\n        this.customMessageService.showSuccessMessage('Event added successfully')\r\n        this.formGroup.reset();\r\n        this.loadExistingEvents();\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred while adding the event:', error);\r\n        this.customMessageService.showErrorMessage('An error occurred while adding the event')\r\n      }\r\n    )}\r\n    else{\r\n      if(!this.isMonthlyCashRegister)\r\n      this.customMessageService.showErrorMessage('Cannot add events before setting up a monthly cash register.')\r\n    }\r\n  };\r\n\r\n  addExpenseToSelectedEvent(selectedEvent:Event){\r\n    console.log(selectedEvent);\r\n    this.router.navigate(['/navbar-secretary/add-expense'], \r\n    { queryParams: { selectedEvent:  JSON.stringify(selectedEvent)} });\r\n  }\r\n}\r\n\r\n\r\n","<div  *ngIf=\"!isMonthlyCashRegister\">\r\n  <p>Cannot add events before setting up a monthly cash register.</p>\r\n  <add-monthly-cash-register>add monthly cash register</add-monthly-cash-register>\r\n</div>\r\n<div id=\"addEventPage\">\r\n  <p-toast></p-toast>\r\n  <div id=\"addEventForm\">\r\n    <form [formGroup]=\"formGroup\">\r\n      <div class=\"form-group\">\r\n        <p-dropdown formControlName=\"selectedEventCategory\" [options]=\"eventCategories\" [placeholder]=\"'addEventForm.select event category'|translate\" [optionLabel]=\"getOptionLabel()\"appendTo=\"body\" [style]=\"{'width':'100%'}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" pInputText formControlName=\"eventName\" [placeholder]=\"'addEventForm.event name'|translate\">\r\n      </div>\r\n      <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n      <button pButton type=\"button\" (click)=\"addEvent()\" class=\"centered-button\">{{'addEventForm.add event' | translate}}</button>\r\n    </form>\r\n  </div>\r\n  <div id=\"eventsList\" *ngIf=\"existingEvents\">\r\n    <div class=\"card xl:flex xl:justify-content-center\">\r\n      <p-orderList [value]=\"existingEvents\" [listStyle]=\"{ height: '25rem' }\" header=\"existingEvents\">\r\n          <ng-template let-event pTemplate=\"item\">\r\n            <div class=\"eventListItems\">\r\n              <div>\r\n                <span class=\"font-bold\">{{ event.eventName }}</span>\r\n              </div>\r\n              <div>\r\n                <button pButton (click)=\"addExpenseToSelectedEvent(event)\">add Expense</button>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n      </p-orderList>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ExpenseCategory } from 'src/app/models/expenseCategory';\r\nimport { EventService } from 'src/app/services/event-service/event.service';\r\nimport { Event } from 'src/app/models/event';\r\nimport { ExpenseCategoryService } from 'src/app/services/expense-service/expense-category.service';\r\nimport { BuyerService } from 'src/app/services/buyer-service/buyer.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { NewExpenseModel } from 'src/app/models/expense';\r\nimport { ExpenseService } from 'src/app/services/expense-service/expense.service';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'add-expense',\r\n  templateUrl: './add-expense.component.html',\r\n  styleUrls: ['./add-expense.component.scss'],\r\n})\r\nexport class AddExpenseComponent implements OnInit {\r\n  currentUser:any;\r\n  expensesCategory: ExpenseCategory[] = [];\r\n  events: Event[] = [];\r\n  buyers: any[] = [];\r\n  formGroup!: FormGroup;\r\n  validForm: boolean = true;\r\n  isEvents: boolean = false;\r\n  selectedEventParams:Event | undefined;\r\n  isMonthlyCashRegister:boolean = false;\r\n  currentMonth:number | undefined;\r\n  minDateValue: Date = new Date();\r\n  maxDateValue: Date = new Date();\r\n  \r\n\r\n  constructor(\r\n    private readonly translateService:TranslateService,\r\n    private authService:AuthService,\r\n    private expenseCategoryService: ExpenseCategoryService,\r\n    private buyerService: BuyerService,\r\n    private eventService: EventService,\r\n    private expenseService:ExpenseService,\r\n    private router: Router,\r\n    private activedRoute: ActivatedRoute,\r\n    private customMessageService:CustomMessageService,\r\n    private monthlyCashRegisterService:MontlyCashRegisterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activedRoute.queryParams.subscribe(params =>{\r\n      const selectedEventString = params['selectedEvent'];\r\n      this.selectedEventParams = selectedEventString ? JSON.parse(selectedEventString) : undefined;\r\n      console.log(this.selectedEventParams);\r\n    })\r\n    this.loadUser();\r\n    this.loadEvents();\r\n    this.loadExpenseCategories();\r\n    this.loadBuyers();\r\n    this.initializeForm();\r\n    this.isMonthlyRegister();\r\n  }\r\n  loadUser(){\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    console.log(this.currentUser);\r\n  }\r\n\r\n  isMonthlyRegister(){\r\n    const isMonthlyRegisterSet = this.monthlyCashRegisterService.getCurrentMothlyRegister();\r\n    if(isMonthlyRegisterSet)\r\n    this.isMonthlyCashRegister = true;\r\n    this.currentMonth = isMonthlyRegisterSet.monthlyCashRegisterMonth;\r\n    this.setMinMaxDates();\r\n  }\r\n  \r\n  setMinMaxDates() {\r\n    if (this.currentMonth) {\r\n      const year = new Date().getFullYear();\r\n      const month = this.currentMonth;\r\n      const firstDayOfMonth = new Date(Number(year), Number(month) - 1, 1);\r\n      const lastDayOfMonth = new Date(Number(year), Number(month), 0);\r\n      this.minDateValue = firstDayOfMonth;\r\n      this.maxDateValue = lastDayOfMonth;\r\n    }\r\n  }\r\n\r\n  loadEvents() {\r\n    this.eventService.getEventsByUser().subscribe(\r\n      (data) => {\r\n        this.events = data.data;\r\n        if (this.events?.length > 0 || this.events != null) {\r\n          this.isEvents = true;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  loadExpenseCategories() {\r\n    this.expenseCategoryService.getAllExpenseCategories().subscribe(\r\n      (data) => {\r\n        this.expensesCategory = data.data;\r\n        console.log(\"expensesCategory\",this.expensesCategory)\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  loadBuyers() {\r\n    this.buyerService.getBuyers().subscribe(\r\n      (data) => {\r\n        this.buyers = data.data;\r\n        console.log(this.buyers)\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  isInvalid(controlName: string): boolean {\r\n    const control: AbstractControl | null = this.formGroup.get(controlName);\r\n    return control ? control.touched && control.invalid : false;\r\n  }\r\n\r\n  getOptionLabel(dropdownType: string): string {\r\n    const translationKey = dropdownType === 'expenseCategory' ? 'expenseCategoryName' : 'buyerName';\r\n    return this.translateService.currentLang === 'en-US' ? translationKey : `${translationKey}Heb`;\r\n  }\r\n  \r\n  \r\n  addExpense() {\r\n    this.validForm = !this.formGroup.invalid;\r\n    if(this.validForm && this.isMonthlyCashRegister){\r\n      const refundMonth  =  this.monthlyCashRegisterService.getCurrentMothlyRegister().monthlyCashRegisterMonth;\r\n      const { selectedBuyer, selectedEvent, selectedExpenseCategory, expenseAmount, expenseDate, storeName, notes } = this.formGroup.value;\r\n\r\n      const newExpenseModel: NewExpenseModel = {\r\n        expenseId: 0,\r\n        buyerId: selectedBuyer?.buyerId,\r\n        eventsId: selectedEvent?.eventId || 2,\r\n        departmentId: this.currentUser.departmentId,\r\n        expenseCategoryId: selectedExpenseCategory?.expenseCategoryId,\r\n        expenseAmount,\r\n        expenseDate: expenseDate?.toISOString(),\r\n        storeName,\r\n        notes: notes || \"\",\r\n        isActive: true,\r\n        isApproved: false,\r\n        isLocked: false,\r\n        refundMonth: refundMonth,\r\n        updatedBy: \"\",\r\n        invoiceScan:\"\"\r\n      };\r\n  \r\n      console.log(\"newExpenseModel\", newExpenseModel);\r\n\r\n      this.expenseService.addNewExpense(newExpenseModel).subscribe(\r\n        (response) =>{\r\n          console.log(\"expense added successfully\", response);\r\n          this.customMessageService.showSuccessMessage('Expense is added');\r\n          this.formGroup.reset();\r\n        },\r\n        (error)=>{\r\n          console.error('An error occurred while add the expense:', error);\r\n          this.customMessageService.showErrorMessage('An error occurred while adding the expense');\r\n        }\r\n      );\r\n    }\r\n    else{\r\n      this.customMessageService.showErrorMessage('Cannot add expenses before setting up a monthly cash register.')\r\n    }\r\n  }\r\n  cancelExpense() {\r\n    this.formGroup.reset();\r\n    this.router.navigate(['/home-secretary']);\r\n  }\r\n  initializeForm() {\r\n    this.formGroup = new FormGroup({\r\n      selectedEvent: new FormControl<Event | null>(this.selectedEventParams ?? null, null),\r\n      selectedExpenseCategory: new FormControl<ExpenseCategory | null>(null,Validators.required,),\r\n      storeName: new FormControl<string | null>(null, Validators.required),\r\n      expenseAmount: new FormControl<number | null>(null, Validators.required),\r\n      expenseDate: new FormControl<Date | null>(null, Validators.required),\r\n      selectedBuyer: new FormControl<any | null>(null),\r\n      notes: new FormControl<string | null>(null),\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"!isMonthlyCashRegister\">\r\n  <p>Cannot add expenses before setting up a monthly cash register.</p>\r\n  <add-monthly-cash-register>add monthly cash register</add-monthly-cash-register>\r\n</div>\r\n<div id=\"addExpenseForm\">\r\n  <p-toast></p-toast>\r\n  <form [formGroup]=\"formGroup\">\r\n    <div class=\"form-group\" *ngIf=\"isEvents\">\r\n      <p-dropdown formControlName=\"selectedEvent\" [options]=\"events\" [placeholder]=\"'addExpenseForm.Event' | translate\" optionLabel=\"eventName\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n      <div>\r\n        <small *ngIf=\"isInvalid('selectedEvent')\" translate>addExpenseForm.Please select an event.</small>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <p-dropdown formControlName=\"selectedExpenseCategory\" [options]=\"expensesCategory\" [placeholder]=\"'addExpenseForm.Expense Category' | translate\" [optionLabel]=\"getOptionLabel('expenseCategory')\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n      <div>\r\n        <small *ngIf=\"isInvalid('selectedExpenseCategory')\" translate>addExpenseForm.Please select an expense category.</small>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input type=\"text\" [placeholder]=\"'addExpenseForm.Store name' | translate\" pInputText formControlName=\"storeName\">\r\n      <div>\r\n        <small *ngIf=\"isInvalid('storeName')\" translate>addExpenseForm.Please enter a store name.</small>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <p-inputNumber [placeholder]=\"'addExpenseForm.Expense amount' | translate\" inputId=\"currency-il\" mode=\"currency\" currency=\"ILS\" locale=\"he-IL\" formControlName=\"expenseAmount\" [showButtons]=\"false\"></p-inputNumber>\r\n      <div>\r\n        <small *ngIf=\"isInvalid('expenseAmount')\" translate>addExpenseForm.Please enter an expense amount.</small>\r\n      </div>\r\n      </div>\r\n    <div class=\"form-group\">\r\n      <p-calendar [minDate]=\"minDateValue\" [maxDate]=\"maxDateValue\" formControlName=\"expenseDate\" [placeholder]=\"'addExpenseForm.Expense date' | translate\" dateFormat=\"dd/mm/yy\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-calendar>\r\n      <div>\r\n        <small *ngIf=\"isInvalid('expenseDate')\" translate>addExpenseForm.Please enter an expense date.</small>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <p-dropdown formControlName=\"selectedBuyer\" [options]=\"buyers\" appendTo=\"body\" [placeholder]=\"'addExpenseForm.buyer' | translate\" [optionLabel]=\"getOptionLabel('buyer')\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input type=\"text\" [placeholder]=\"'addExpenseForm.Notes' | translate\" pInputText formControlName=\"notes\">\r\n    </div>\r\n    <p *ngIf=\"!validForm\">Please fill in all required fields</p>\r\n    <div>\r\n      <button pButton type=\"button\"   (click)=\"addExpense()\"><i class=\"pi pi-check\"></i>{{ 'addExpenseForm.Add' | translate }}</button>\r\n      <button pButton type=\"button\" id=\"cancelButton\" (click)=\"cancelExpense()\"><i class=\"pi pi-times\"></i>{{ 'addExpenseForm.Cancel' | translate }}</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\n\r\n@Component({\r\n  selector: 'add-monthly-cash-register',\r\n  templateUrl: './add-monthly-cash-register.component.html',\r\n  styleUrls: ['./add-monthly-cash-register.component.scss']\r\n})\r\nexport class AddMonthlyCashRegisterComponent implements OnInit{\r\n  formGroup!: FormGroup;\r\n  validForm: boolean = true;\r\n  months:any[]=[];\r\n  addMonthlyRegisterDialog:boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private monthlyCashRegisterService: MontlyCashRegisterService,\r\n    private customMessageService:CustomMessageService,\r\n    private router:Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.loadMonths();\r\n  }\r\n\r\n  loadMonths() {\r\n    const currentDate = new Date();\r\n    const currentMonth = currentDate.getMonth();\r\n  \r\n    const monthNames = [\r\n      'January', 'February', 'March', 'April', 'May', 'June',\r\n      'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n  \r\n    this.months = Array.from({ length: 12 }, (_, index) => ({\r\n      value: index + 1, // Months are 1-based in JavaScript Date object\r\n      name: monthNames[index]\r\n    }));\r\n  }\r\n  \r\n\r\n\r\n  initializeForm() {\r\n    const currentDate = new Date();\r\n    const currentMonth = currentDate.getMonth() + 1;\r\n    const currentYear = currentDate.getFullYear(); \r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      selectedMonth: new FormControl<number>(currentMonth ,Validators.required),\r\n      currentYear: new FormControl<number>(currentYear, Validators.required),\r\n    });\r\n  }\r\n\r\n  addMonthlyRegister(){\r\n    this.addMonthlyRegisterDialog = true;\r\n  }\r\n\r\n  async saveMonthlyRegister(){\r\n    // this.validForm = !this.validForm;\r\n    if (this.validForm) {\r\n      const selectedMonthValue = this.formGroup.value.selectedMonth;\r\n\r\n      const newMonthlyRegister = {\r\n        monthlyCashRegisterId: 0,\r\n        updatedBy: \"string\",\r\n        monthlyCashRegisterName: \"string\",\r\n        monthlyCashRegisterMonth: selectedMonthValue.value,\r\n        monthlyCashRegisterYear: this.formGroup.value.currentYear,\r\n        amountInCashRegister: 0,\r\n        refundAmount: 0,\r\n        isActive: true\r\n      };\r\n  \r\n      console.log(\"New Monthly Register:\", newMonthlyRegister);\r\n  \r\n      try {\r\n        const response = await this.monthlyCashRegisterService.addMonthlyRegister(newMonthlyRegister).toPromise();\r\n        console.log('Monthly register added successfully:', response);\r\n        this.customMessageService.showSuccessMessage('Monthly register added successfully');\r\n        this.formGroup.reset();\r\n        this.addMonthlyRegisterDialog = false;\r\n  \r\n        const currentMonthlyCashRegisterResponse = await this.monthlyCashRegisterService.getCurrentMontlyCashRegisterByUserId().toPromise();\r\n  \r\n        console.log('Current Monthly Cash Register:', currentMonthlyCashRegisterResponse);\r\n  \r\n        this.router.navigate(['/navbar-secretary/home-secretary']);\r\n      } catch (error) {\r\n        console.error('An error occurred while adding the monthly register:', error);\r\n        this.customMessageService.showErrorMessage('An error occurred while adding the monthly register');\r\n      }\r\n    }\r\n  }\r\n}","<button class=\"button\" pButton (click)=\"addMonthlyRegister()\" translate>monthlyCashRegister.New Monthly Cash Register</button>\r\n<!-- <p-toast></p-toast> -->\r\n<p-dialog [(visible)]=\"addMonthlyRegisterDialog\" [style]=\"{ width: '450px' }\" header=\"{{ 'monthlyCashRegister.New Monthly Cash Register' | translate }}\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n  <div id=\"addMonthlyRegisterForm\">\r\n    <form [formGroup]=\"formGroup\">\r\n      <div class=\"form-group\">\r\n        <p-dropdown formControlName=\"selectedMonth\" [options]=\"months\" [placeholder]=\"'Select Month'|translate\" optionLabel=\"name\" appendTo=\"body\" [style]=\"{'width':'100%'}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" pInputText formControlName=\"currentYear\" [placeholder]=\"'Current Year'|translate\">\r\n        <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n        <button pButton type=\"button\" (click)=\"saveMonthlyRegister()\" class=\"centered-button\">{{'monthlyCashRegister.Add Monthly Cash Register' | translate}}</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MonthlyCashRegister } from 'src/app/models/monthlyCashRegister';\r\nimport { AdditionalActionsService } from 'src/app/services/additional-actions-service/additional-actions.service';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\n\r\n@Component({\r\n  selector: 'close-monthly-activities',\r\n  templateUrl: './close-monthly-activities.component.html',\r\n  styleUrls: ['./close-monthly-activities.component.scss']\r\n})\r\nexport class CloseMonthlyActivitiesComponent implements OnInit{\r\n\r\n  MonthlyRegisterValue: MonthlyCashRegister = new MonthlyCashRegister();\r\n  currentUsr:any;\r\n\r\n  constructor(\r\n    private additionalActionsService:AdditionalActionsService,\r\n    private customMessageService:CustomMessageService,\r\n    private monthlyCashRegisterService:MontlyCashRegisterService,\r\n    private authService:AuthService,\r\n    private router:Router){}\r\n  \r\n  ngOnInit(): void {\r\n    this.getMonthlyRegister();\r\n  }\r\n\r\n  getMonthlyRegister(){\r\n    this.currentUsr = this.authService.getCurrentUser();\r\n    this.MonthlyRegisterValue = this.monthlyCashRegisterService.getCurrentMothlyRegister();\r\n    \r\n    // Check if MonthlyCashRegisterMonth is defined before calling getMonthName\r\n    if (this.MonthlyRegisterValue.monthlyCashRegisterMonth !== undefined) {\r\n    }\r\n\r\n    console.log(this.MonthlyRegisterValue);\r\n  }\r\n\r\n  closeMonthlyActivities(){\r\n    if(this.currentUsr.isManager){\r\n      \r\n    }\r\n    if (this.MonthlyRegisterValue.refundAmount === 0) {\r\n      // If refundAmount is 0, show an error and return\r\n      this.customMessageService.showErrorMessage('Refund amount cannot be 0');\r\n      return;\r\n    }\r\n    \r\n    this.additionalActionsService.closeMonthlyActivities().subscribe(\r\n      (respose) =>{\r\n        console.log(respose);\r\n        this.customMessageService.showSuccessMessage(\"expenses approved successfully\")\r\n        this.monthlyCashRegisterService.deactivateMonthlyCashRegister();\r\n        this.router.navigate(['/navbar-secretary/home-secretary']);\r\n      },\r\n      (error) =>{\r\n        console.error('An error occurred while approve expenses: ', error);\r\n        this.customMessageService.showErrorMessage('An error occurred while approve expenses');\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-update-event-category',\r\n  templateUrl: './create-update-event-category.component.html',\r\n  styleUrls: ['./create-update-event-category.component.scss'],\r\n})\r\nexport class CreateUpdateEventCategoryComponent {}\r\n","<p>create-update-event-category works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MonthlyCashRegister } from 'src/app/models/monthlyCashRegister';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\n\r\n@Component({\r\n  selector: 'home-secretary',\r\n  templateUrl: './home-secretary.component.html',\r\n  styleUrls: ['./home-secretary.component.scss'],\r\n})\r\nexport class HomeSecretaryComponent implements OnInit {\r\n  monthlyRegisters: MonthlyCashRegister[] = []; \r\n  isMonthlyRegister: boolean = false;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private monthlyCashRegisterService: MontlyCashRegisterService,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.authService.isLoggedIn) {\r\n      this.currentUser = this.authService.getCurrentUser();\r\n      this.loadCurrentMonthlyCashRegister();\r\n    }\r\n  }\r\n\r\n  loadCurrentMonthlyCashRegister() {\r\n    if (this.currentUser.isManager) {\r\n      this.monthlyCashRegisterService.getCurrentMontlyCashRegisterByUserId(this.currentUser.departmentId).subscribe(\r\n        (data) => {\r\n          if (data.success && data.data != null) {\r\n            this.isMonthlyRegister = true;\r\n            this.monthlyRegisters.push(...data.data);\r\n            console.log(data.data)\r\n          } else {\r\n            // Handle the case where data is incorrect\r\n            this.isMonthlyRegister = false;\r\n          }\r\n          console.log('currentMonthlyCashRegister', this.isMonthlyRegister);\r\n        },\r\n        (error) => {\r\n          console.error('Error loading currentMonthlyCashRegister', error);\r\n          this.isMonthlyRegister = false;\r\n        }\r\n      );\r\n    } else {\r\n      // Call service without departmentId for non-manager\r\n      this.monthlyCashRegisterService.getCurrentMontlyCashRegisterByUserId().subscribe(\r\n        (data) => {\r\n          if (data.success && data.data != null) {\r\n            this.isMonthlyRegister = true;\r\n            this.monthlyRegisters.push(data.data);\r\n          } else {\r\n            // Handle the case where data is incorrect\r\n            this.isMonthlyRegister = false;\r\n          }\r\n          console.log('currentMonthlyCashRegister', this.isMonthlyRegister);\r\n        },\r\n        (error) => {\r\n          console.error('Error loading currentMonthlyCashRegister', error);\r\n          this.isMonthlyRegister = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"budgetDetails\">\r\n  <div *ngFor=\"let monthlyRegister of monthlyRegisters\">\r\n    <monthly-cash-register  [monthlyRegister]=\"monthlyRegister\"></monthly-cash-register>\r\n  </div>\r\n  <add-monthly-cash-register *ngIf=\"!isMonthlyRegister && !currentUser?.isManager\"></add-monthly-cash-register>\r\n  <budget-information></budget-information>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  items: MenuItem[] | undefined;\r\n  activeItem: MenuItem | undefined;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) {}\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n  }\r\n  isActiveRoute(route: string): boolean {\r\n    return this.router.isActive(route, true);\r\n  }\r\n\r\n  onActiveItemChange(event: MenuItem) {\r\n    this.activeItem = event;\r\n  }\r\n\r\n  logOut() {\r\n    this.authService.doLogout();\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <nav>\r\n    <ul class=\"nav-list\">\r\n      <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-secretary/home-secretary') }\">\r\n        <a routerLink=\"/navbar-secretary/home-secretary\" translate>navbar.Home</a>\r\n      </li>\r\n      <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-secretary/add-event') }\">\r\n        <a routerLink=\"/navbar-secretary/add-event\" translate>navbar.Inserting a new activity</a>\r\n      </li>\r\n      <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-secretary/add-expense') }\">\r\n        <a routerLink=\"/navbar-secretary/add-expense\" translate>navbar.Inserting a new expense</a>\r\n      </li>\r\n      <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-secretary/expense-report') }\">\r\n        <a routerLink=\"/navbar-secretary/expense-report\" translate>navbar.Approval of the monthly report</a>\r\n      </li>\r\n      <li [ngClass]=\"{ 'active-link': isActiveRoute('/navbar-secretary/previous-expenses') }\">\r\n        <a routerLink=\"/navbar-secretary/previous-expenses\" translate>navbar.View previous months</a>\r\n    </ul>\r\n    <div class=\"nav-info\">  \r\n      <div>\r\n      <p>{{currentUser?.department?.departmentName }}</p>\r\n      <p>{{currentUser?.username}}</p>\r\n    </div>\r\n    <div>\r\n      <i class=\"fa-sharp fa-solid fa-arrow-right-from-bracket\" (click)=\"logOut()\"></i>\r\n    </div>\r\n    </div>\r\n    \r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { BudgetImformationService } from 'src/app/services/budget-information-service/budget-imformation.service';\r\n\r\n@Component({\r\n  selector: 'budget-information',\r\n  templateUrl: './budget-information.component.html',\r\n  styleUrls: ['./budget-information.component.scss'],\r\n})\r\nexport class BudgetInformationComponent implements OnInit{\r\n  budgetInformation:any;\r\n  budgetType:string = \"\";\r\n  currentLang:string = \"en-US\"\r\n  currentUser:any;\r\n  departmentId:number | undefined\r\n\r\n  constructor(\r\n    private budgetInformationService:BudgetImformationService,\r\n    private translateService:TranslateService,\r\n    private authService:AuthService,\r\n  ){}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.currentUser = await this.authService.getCurrentUser();\r\n    this.getBudgetInformation();\r\n  }\r\n\r\n  getBudgetInformation(){\r\n    if(this.currentUser.isManager){\r\n      console.log(this.currentUser);\r\n      this.departmentId = this.currentUser.departmentId;\r\n    }\r\n    this.budgetInformationService.getBudgetInformation(this.departmentId).subscribe(\r\n      (data) => {\r\n        this.budgetInformation = data.data;\r\n        console.log(this.budgetInformation);\r\n        this.currentLang = this.translateService.currentLang;\r\n        if(this.budgetInformation.annualBudget != null){\r\n          \r\n          this.budgetType = \"annualBudget\";\r\n        }\r\n        else{\r\n          if(this.budgetInformation.monthlyBudget != null){\r\n            this.budgetType = \"monthlyBudget\";\r\n          }\r\n          else{\r\n            this.budgetType = \"refundBudget\"\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  getBudgetType(): string {\r\n    return this.translateService.currentLang === 'en-US' ?\r\n      `budget type - ${this.budgetInformation.budgetType.budgetTypeName}` :\r\n      `סוג תקציב - ${this.budgetInformation.budgetType.budgetTypeNameHeb}`;\r\n  }\r\n\r\n  getSpentPercentage(totalAmount: number, annualBudgetCeiling: number): number {\r\n    return (totalAmount / annualBudgetCeiling) * 100;\r\n  }\r\n}\r\n","<div class=\"card flex justify-content-center\">\r\n  <p >{{getBudgetType()}}</p>\r\n  <p-card>\r\n    <ng-container *ngIf=\"budgetType === 'annualBudget'\">\r\n      <h1>{{budgetInformation?.budgetType.budgetTypeName}} - ₪{{budgetInformation.annualBudget.annualBudgetCeiling | number}}</h1>\r\n      <h4>\r\n        {{ 'budgetInformation.So far you have spent' | translate }} ₪{{ budgetInformation?.totalAmount | number}}\r\n      </h4>\r\n      <h5 [ngClass]=\"{\r\n        'orange-text': getSpentPercentage(budgetInformation?.totalAmount ?? 0, budgetInformation?.annualBudget?.annualBudgetCeiling ?? 0) > 80 && getSpentPercentage(budgetInformation?.totalAmount ?? 0, budgetInformation?.annualBudget?.annualBudgetCeiling ?? 0) <= 90,\r\n        'red-text': getSpentPercentage(budgetInformation?.totalAmount ?? 0, budgetInformation?.annualBudget?.annualBudgetCeiling ?? 0) > 90\r\n        }\">\r\n        {{ 'budgetInformation.Percentage spent' | translate }}:\r\n        {{ getSpentPercentage(budgetInformation?.totalAmount ?? 0, budgetInformation?.annualBudget?.annualBudgetCeiling ?? 0) | number: '1.0-2' }}%\r\n      </h5>\r\n      <h4>\r\n        {{ 'budgetInformation.Your remaining budget' | translate }}\r\n        ₪{{ ((budgetInformation.annualBudget.annualBudgetCeiling ?? 0)) - (budgetInformation.totalAmount ?? 0)|number}}\r\n      </h4>    \r\n    </ng-container>\r\n    <ng-container *ngIf=\"budgetType === 'monthlyBudget'\">\r\n      <h1>{{budgetInformation?.budgetType.budgetTypeName}} - ₪{{budgetInformation.monthlyBudget.monthlyBudgetCeiling | number}}</h1>\r\n      <h4>\r\n        {{ 'budgetInformation.So far you have spent' | translate }} ₪{{ budgetInformation?.totalAmount | number}}\r\n      </h4>\r\n      <h4>\r\n        {{ 'budgetInformation.Your remaining budget' | translate }}\r\n        ₪{{ ((budgetInformation.monthlyBudget.monthlyBudgetCeiling ?? 0)) - (budgetInformation.totalAmount ?? 0) | number}}\r\n      </h4>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"budgetType === 'refundBudget'\">\r\n      <h4>\r\n        {{ 'budgetInformation.So far you have spent' | translate }} ₪{{ budgetInformation?.totalAmount | number}}\r\n      </h4>\r\n    </ng-container>\r\n  </p-card>\r\n</div>","import { Inject, Renderer2 } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\n\r\n@Component({\r\n  selector: 'choose-language',\r\n  templateUrl: './choose-language.component.html',\r\n  styleUrls: ['./choose-language.component.scss'],\r\n})\r\nexport class ChooseLanguageComponent implements OnInit {\r\n  selectedLanguage: string = 'en-US';\r\n  constructor(\r\n    private readonly translateService: TranslateService,\r\n    @Inject(DOCUMENT) private readonly ducument: Document,\r\n    private readonly renderer: Renderer2,\r\n    private authService:AuthService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.translateService.setDefaultLang(this.selectedLanguage);\r\n    this.translateService.use(this.selectedLanguage);\r\n  }\r\n\r\n  changeLanguage(lang: string) {\r\n    this.selectedLanguage = lang;\r\n    this.translateService.setDefaultLang(lang);\r\n    this.translateService.use(lang);    \r\n\r\n    const body = this.ducument.querySelector('body');\r\n    this.renderer.removeClass(body, 'hebrew-style');\r\n    if (lang === 'he-IL') {\r\n      this.renderer.addClass(body, 'hebrew-style');\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h6 translate>choose language</h6>\r\n  <button (click)=\"changeLanguage('en-US')\" [ngClass]=\"{'custom-style': selectedLanguage === 'en-US' }\">English</button>\r\n  <button (click)=\"changeLanguage('he-IL')\" [ngClass]=\"{'custom-style': selectedLanguage === 'he-IL' }\">עברית</button>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ExpenseService } from 'src/app/services/expense-service/expense.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { ExpenseReportInfoService } from 'src/app/services/expense-service/expense-report-info.service';\r\nimport { ExpenseCategory } from 'src/app/models/expenseCategory';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ExpenseCategoryService } from 'src/app/services/expense-service/expense-category.service';\r\nimport { BuyerService } from 'src/app/services/buyer-service/buyer.service';\r\nimport { EventService } from 'src/app/services/event-service/event.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NewExpenseModel } from 'src/app/models/expense';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'expense-report',\r\n  templateUrl: './expense-report.component.html',\r\n  styleUrls: ['./expense-report.component.scss'],\r\n})\r\nexport class ExpenseReportComponent implements OnInit {\r\n  currentUser:any;\r\n  expenses: any[] = [];\r\n  expense:any;\r\n  selectedExpense: any;\r\n  expenseDialog:boolean = false;\r\n  submitted:boolean = false;\r\n  expensesCategory: ExpenseCategory[] = [];\r\n  events: any[] = [];\r\n  buyers: any[] = [];\r\n  formGroup!: FormGroup;\r\n  validForm: boolean = true;\r\n  monthlyRegister:any;\r\n  year:number | undefined;\r\n  month:number | undefined;\r\n\r\n  constructor(\r\n    private translateService:TranslateService,\r\n    private authService:AuthService,\r\n    private expenseService: ExpenseService,\r\n    private expenseReportInfoService:ExpenseReportInfoService,\r\n    private customMessageService:CustomMessageService,\r\n    private confirmationService:ConfirmationService,\r\n    private expenseCategoryService: ExpenseCategoryService,\r\n    private buyerService: BuyerService,\r\n    private monthlyCashRegisterService:MontlyCashRegisterService,\r\n    private eventService: EventService,\r\n    private route:ActivatedRoute,\r\n    private router:Router,\r\n   ) {}\r\n\r\n   ngOnInit() {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    this.route.queryParams.subscribe(params => {\r\n        this.year = params['selectedYear'];\r\n        this.month = params['selectedMonth'];\r\n\r\n        // Check if year and month are undefined\r\n        if (this.year == undefined && this.month == undefined) {\r\n            this.monthlyRegister = this.monthlyCashRegisterService.getCurrentMothlyRegister();\r\n\r\n            // Check if monthlyRegister is an array\r\n            if (Array.isArray(this.monthlyRegister) && this.monthlyRegister.length > 0) {\r\n                // Find the object with the earliest monthlyCashRegisterMonth\r\n                const earliestRegister = this.monthlyRegister.reduce((earliest, current) =>\r\n                    earliest.monthlyCashRegisterMonth < current.monthlyCashRegisterMonth ? earliest : current);\r\n\r\n                // Update year and month accordingly\r\n                this.month = earliestRegister.monthlyCashRegisterMonth;\r\n                this.year = earliestRegister.monthlyCashRegisterYear;\r\n            } else if (!Array.isArray(this.monthlyRegister)) { // Check if monthlyRegister is not an array\r\n                // If it's a single object, use its year and month\r\n                this.month = this.monthlyRegister.monthlyCashRegisterMonth;\r\n                this.year = this.monthlyRegister.monthlyCashRegisterYear;\r\n            }\r\n        }\r\n\r\n        if (this.year && this.month) {\r\n            if (this.currentUser.isManager) {\r\n                const departmentId = this.currentUser.departmentId;\r\n                this.loadExpensesByYearAndMonth(this.year, this.month, departmentId);\r\n            }\r\n            this.loadExpensesByYearAndMonth(this.year, this.month);\r\n        }\r\n    });\r\n}\r\n\r\n  \r\n\r\n  loadExpensesByYearAndMonth(selectedYear: number, selectedMonth:number, departmentId?:number){\r\n    this.expenseReportInfoService.getExpensesReportByYearAndMonth(selectedYear, selectedMonth, departmentId).subscribe(\r\n      (data) =>{\r\n        this.expenses = data.data || [];\r\n        console.log(\"previus expenses\",this.expenses);\r\n      },\r\n      (error) =>{\r\n        console.log('An error occurred: ', error);;\r\n      },\r\n    );\r\n  }\r\n\r\n  confirmExpenses(){\r\n    if(this.currentUser.isManager){\r\n      if(this.expenses && this.expenses.length > 0 && this.expenses[0]?.expense && this.expenses[0]?.expense.isApproved === false){\r\n        this.customMessageService.showErrorMessage('\"The  cash register cannot be closed as long as there are unapproved expenses.');\r\n        return;\r\n      }\r\n      this.router.navigate(['/navbar-manager/close-monthly-activities']);\r\n    }\r\n    if (this.monthlyRegister.refundAmount === 0) {\r\n      // If refundAmount is 0, show an error and return\r\n      this.customMessageService.showErrorMessage('Refund amount cannot be 0');\r\n      return;\r\n    }\r\n    this.router.navigate(['/navbar-secretary/close-monthly-activities']);\r\n  }\r\n\r\n  deleteExpense(event:Event, expense:any) {\r\n    const expenseIdToDelete = expense.expense.expenseId;\r\n    this.confirmationService.confirm({\r\n        target: event.target as EventTarget,\r\n        message: this.translateService.instant('messages.deleteExpenseConfirmation'),\r\n        icon: 'pi pi-info-circle',\r\n        acceptButtonStyleClass: ' p-button-sm',\r\n        accept: () => {\r\n          this.expenseService.deleteExpense(expenseIdToDelete).subscribe(\r\n            (data) => {\r\n              console.log('expense is deleted', data);\r\n              this.customMessageService.showSuccessMessage(this.translateService.instant('messages.expenseDeleted'));\r\n              this.expenses = this.expenses.filter((val) => val.expense.expenseId !== expenseIdToDelete);\r\n            },\r\n            (error) => {\r\n              console.error('An error occurred:', error);\r\n              this.customMessageService.showErrorMessage('An error occurred while deleting the expense');\r\n            }\r\n          );        \r\n        },\r\n        reject: () => {\r\n          this.customMessageService.showRejectedMessage('You have rejected');\r\n        }\r\n    });\r\n  }\r\n\r\n\r\n  async editExpense(expense:any){\r\n    console.log(expense);\r\n    this.expense = expense;\r\n    this.expenseDialog = true;\r\n    await this.loadData();\r\n    this.initializeForm();\r\n\r\n    const selectedEvent = this.events ? this.events.find(e => e.eventId === expense.expense.eventsId) : null;\r\n    const selectedBuyer = this.buyers ? this.buyers.find(b => b.buyerId == expense.expense.buyerId) : null;\r\n    const selectedExpenseCategory = this.expensesCategory ? this.expensesCategory.find(ec => ec.expenseCategoryId == expense.expense.expenseCategoryId) : null;\r\n\r\n    this.formGroup.setValue({\r\n      selectedEvent: selectedEvent,\r\n      selectedExpenseCategory: selectedExpenseCategory,\r\n      storeName: expense.expense.storeName,\r\n      expenseAmount: expense.expense.expenseAmount,\r\n      expenseDate: new Date(expense.expense.expenseDate), // Assuming expenseDate is a string\r\n      selectedBuyer: selectedBuyer,\r\n      notes: expense.expense.notes,\r\n    });\r\n    console.log(this.formGroup.value)\r\n  }\r\n\r\n  async loadData() {\r\n    await Promise.all([this.loadEvents(), this.loadExpenseCategories(), this.loadBuyers()]);\r\n  }\r\n\r\n  hideDialog(){\r\n    this.expenseDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  updateExense( ){\r\n    const expenseIdToUpdate = this.expense.expense.expenseId;\r\n    this.validForm = !this.formGroup.invalid;\r\n    if(this.validForm){\r\n      const refundMonth = this.monthlyCashRegisterService.getCurrentMothlyRegister().monthlyCashRegisterMonth;\r\n      const { selectedBuyer, selectedEvent, selectedExpenseCategory, expenseAmount, expenseDate, storeName, notes} = this.formGroup.value;\r\n\r\n      const updatedExpense: NewExpenseModel = {\r\n        expenseId: expenseIdToUpdate,\r\n        buyerId: selectedBuyer?.buyerId,\r\n        eventsId: selectedEvent?.eventId || 2,\r\n        departmentId: this.currentUser.departmentId,\r\n        expenseCategoryId: selectedExpenseCategory?.expenseCategoryId,\r\n        expenseAmount,\r\n        expenseDate: expenseDate?.toISOString(),\r\n        storeName,\r\n        notes: notes,\r\n        isActive: true,\r\n        isApproved: false,\r\n        isLocked: false,\r\n        refundMonth: refundMonth,\r\n        updatedBy: \"\",\r\n        invoiceScan:\"\"\r\n      };\r\n  \r\n      console.log(\"newExpenseModel\", updatedExpense);\r\n      this.expenseService.updateExpense(updatedExpense).subscribe(\r\n        (data) =>{\r\n          console.log('expense is updated', data);\r\n          this.customMessageService.showSuccessMessage('Expense is updated');\r\n          if(this.year && this.month)\r\n          this.loadExpensesByYearAndMonth(this.year, this.month);\r\n          this.hideDialog();\r\n        },\r\n        (error) => {\r\n          console.error('An error occurred while updating the expense:', error);\r\n          this.customMessageService.showErrorMessage('An error occurred while updating the expense')\r\n        }\r\n      );\r\n      this.expense = undefined;\r\n    }\r\n  }\r\n\r\n  loadEvents(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.eventService.getEventsByUser().subscribe(\r\n        (data) => {\r\n          this.events = data.data;\r\n          resolve();\r\n        },\r\n        (error) => {\r\n          console.error('An error occurred:', error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  loadExpenseCategories(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.expenseCategoryService.getAllExpenseCategories().subscribe(\r\n        (data) => {\r\n          this.expensesCategory = data.data;\r\n          resolve();\r\n        },\r\n        (error) => {\r\n          console.error('An error occurred:', error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  loadBuyers(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.buyerService.getBuyers().subscribe(\r\n        (data) => {\r\n          this.buyers = data.data;\r\n          resolve();\r\n        },\r\n        (error) => {\r\n          console.error('An error occurred:', error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getOptionLabel(dropdownType: string): string {\r\n    const translationKey = dropdownType === 'expenseCategory' ? 'expenseCategoryName' : 'buyerName';\r\n    return this.translateService.currentLang === 'en-US' ? translationKey : `${translationKey}Heb`;\r\n  }\r\n\r\n  isInvalid(controlName: string): boolean {\r\n    const control: AbstractControl | null = this.formGroup.get(controlName);\r\n    return control ? control.touched && control.invalid : false;\r\n  }\r\n\r\n  initializeForm() {\r\n    this.formGroup = new FormGroup({\r\n      selectedEvent: new FormControl<Event | null>(null),\r\n      selectedExpenseCategory: new FormControl<ExpenseCategory | null>(null,Validators.required,),\r\n      storeName: new FormControl<string | null>(null, Validators.required),\r\n      expenseAmount: new FormControl<number | null>(null, Validators.required),\r\n      expenseDate: new FormControl<Date | null>(null, Validators.required),\r\n      selectedBuyer: new FormControl<any | null>(null),\r\n      notes: new FormControl<string | null>(null),\r\n    });\r\n  }\r\n}","<div class=\"card\">\r\n  <button pButton class=\"confirmButton\" *ngIf=\"expenses && expenses.length > 0 && expenses[0]?.expense && expenses[0]?.expense.isApproved === false\" (click)=\"confirmExpenses()\" translate>expenseDtails.confirm\r\n  </button>\r\n  <p-toast></p-toast>\r\n  <div id=\"expensesReport\">\r\n    <p-table [value]=\"expenses\" \r\n    [paginator] = \"true\"\r\n    [tableStyle]=\"{'min-width': '60rem'}\"\r\n    [rows] = 20\r\n    [showCurrentPageReport]=\"true\"\r\n    >\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <!-- <th style=\"width: 4rem;\">\r\n                  <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th> -->\r\n                <!-- <th pSortableColumn=\"categoryName\" style=\"width:20%\">Name <p-sortIcon field=\"categoryName\"></p-sortIcon></th> -->\r\n                <th pSortableColumn=\"eventName\" style=\"width:14.3%\" translate>expenseDtails.Event <p-sortIcon field=\"eventName\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"expenseCategoryName\" style=\"width:14.3%\" translate>expenseDtails.Category<p-sortIcon field=\"expenseCategoryName\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"expense.storeName\" style=\"width:14.3%\" translate>expenseDtails.Store <p-sortIcon field=\"expense.storeName\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"expense.expenseAmount\" style=\"width:14.3%\" translate>expenseDtails.Amount <p-sortIcon field=\"expense.expenseAmount\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"expense.expenseDate\" style=\"width:14.3%\" translate>expenseDtails.Date<p-sortIcon field=\"expense.expenseDate\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"buyerName\" style=\"width:14.3%\" translate>expenseDtails.buyer<p-sortIcon field=\"buyerName\"></p-sortIcon></th>\r\n                <th pSortableColumn=\"expense.notes\" style=\"width:14.3%\" translate>expenseDtails.Notes<p-sortIcon field=\"expense.notes\"></p-sortIcon></th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-expense>\r\n            <tr>\r\n                <!-- <td>\r\n                  <p-tableCheckbox [value]=\"expense\"></p-tableCheckbox>\r\n                </td> -->\r\n                <!-- <td>{{expense.categoryName}}</td> -->\r\n                <td>{{expense.eventName !== \"DefaultValue\" ? expense.eventName : '' }}</td>\r\n                <td>{{expense.expenseCategoryName}}</td>\r\n                <td>{{expense.expense.storeName}}</td>\r\n                <td>{{expense.expense.expenseAmount}}<i class=\"fa-solid fa-shekel-sign fa-2xs\"></i></td>\r\n                <td>{{expense.expense.expenseDate |  date: 'mediumDate'}}</td>\r\n                <td>{{expense.buyerName}}</td>\r\n                <td>{{expense.expense.notes}}</td>\r\n                <td *ngIf=\"(currentUser.isManager && expense.expense.\r\n                isApproved && !expense.expense.isLocked) || (!currentUser.isManager && !expense.expense.isApproved)\">\r\n                  <p-confirmPopup></p-confirmPopup>\r\n                  <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded\" (click)=\"editExpense(expense)\"></button>\r\n                  <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded\" (click)=\"deleteExpense($event, expense)\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>      \r\n    </p-table>\r\n  </div>\r\n</div>\r\n<p-dialog [(visible)]=\"expenseDialog\" [style]=\"{ width: '450px' }\" [header]=\"'expenseDtails.Expense Details' | translate\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n    <div *ngIf=\"formGroup\">\r\n    <form [formGroup]=\"formGroup\">\r\n      <div class=\"form-group\">\r\n        <p-dropdown formControlName=\"selectedEvent\" [options]=\"events\" [placeholder]=\"'addExpenseForm.Event' | translate\" optionLabel=\"eventName\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n        <div>\r\n          <small *ngIf=\"isInvalid('selectedEvent')\" translate>addExpenseForm.Please select an event.</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <p-dropdown formControlName=\"selectedExpenseCategory\" [options]=\"expensesCategory\" [placeholder]=\"'addExpenseForm.Expense Category' | translate\" [optionLabel]=\"getOptionLabel('expenseCategory')\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n        <div>\r\n          <small *ngIf=\"isInvalid('selectedExpenseCategory')\" translate>addExpenseForm.Please select an expense category.</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" [placeholder]=\"'addExpenseForm.Store name' | translate\" pInputText formControlName=\"storeName\">\r\n        <div>\r\n          <small *ngIf=\"isInvalid('storeName')\" translate>addExpenseForm.Please enter a store name.</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <p-inputNumber [placeholder]=\"'addExpenseForm.Expense amount' | translate\" inputId=\"currency-il\" mode=\"currency\" currency=\"ILS\" locale=\"he-IL\" formControlName=\"expenseAmount\" [showButtons]=\"false\"></p-inputNumber>\r\n        <div>\r\n          <small *ngIf=\"isInvalid('expenseAmount')\" translate>addExpenseForm.Please enter an expense amount.</small>\r\n        </div>\r\n        </div>\r\n      <div class=\"form-group\">\r\n        <p-calendar  formControlName=\"expenseDate\" [placeholder]=\"'addExpenseForm.Expense date' | translate\" dateFormat=\"dd/mm/yy\" appendTo=\"body\" [style]=\"{'width':'80%'}\"></p-calendar>\r\n        <div>\r\n          <small *ngIf=\"isInvalid('expenseDate')\" translate>addExpenseForm.Please enter an expense date.</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <p-dropdown formControlName=\"selectedBuyer\" [options]=\"buyers\" appendTo=\"body\" [placeholder]=\"'addExpenseForm.buyer' | translate\" [optionLabel]=\"getOptionLabel('buyer')\" [style]=\"{'width':'80%'}\"></p-dropdown>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"text\" [placeholder]=\"'addExpenseForm.Notes' | translate\" pInputText formControlName=\"notes\">\r\n      </div>\r\n      <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n      <div>\r\n        <button pButton type=\"button\" (click)=\"updateExense()\"><i class=\"pi pi-check\"></i>{{ 'addExpenseForm.Update' | translate }}</button>\r\n        <button pButton type=\"button\" id=\"cancelButton\" (click)=\"hideDialog()\"><i class=\"pi pi-times\"></i>{{ 'addExpenseForm.Cancel' | translate }}</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</p-dialog>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expenses-report-previous-months',\r\n  templateUrl: './expenses-report-previous-months.component.html',\r\n  styleUrls: ['./expenses-report-previous-months.component.scss'],\r\n})\r\nexport class ExpensesReportPreviousMonthsComponent {}\r\n","<p>expenses-report-previous-months works!</p>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, catchError, forkJoin, map, throwError } from 'rxjs';\r\nimport { MonthlyCashRegister } from 'src/app/models/monthlyCashRegister';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\nimport { BudgetImformationService } from 'src/app/services/budget-information-service/budget-imformation.service';\r\nimport { CustomMessageService } from 'src/app/services/customMessage-service/custom-message.service';\r\nimport { ExpenseService } from 'src/app/services/expense-service/expense.service';\r\nimport { MontlyCashRegisterService } from 'src/app/services/montlyCashRegister-service/montly-cash-register.service';\r\n\r\n@Component({\r\n  selector: 'monthly-cash-register',\r\n  templateUrl: './monthly-cash-register.component.html',\r\n  styleUrls: ['./monthly-cash-register.component.scss'],\r\n})\r\nexport class MonthlyCashRegisterComponent implements OnInit {\r\n  @Input() monthlyRegister:any | undefined\r\n\r\n  MonthlyRegisterValue: MonthlyCashRegister = new MonthlyCashRegister();\r\n  insertRefundAmountDialog: boolean = false;\r\n  formGroup!: FormGroup;\r\n  validForm: boolean = true;\r\n  budgetInformation: any;\r\n  budgetType: string = \"\";\r\n  currentUser:any;\r\n  monthlyAmountForCalculatingPercentages: number | undefined;\r\n  amountWastedForCalculatingPercentages: number | undefined;\r\n  monthNames: string[] = [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July',\r\n    'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  monthNamesHeb:string[] = [\r\n    'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי',\r\n    'אוגוס', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'\r\n  ];\r\n\r\n  constructor(\r\n    private monthlyCashRegisterService: MontlyCashRegisterService,\r\n    private budgetInformationService: BudgetImformationService,\r\n    private expenseService: ExpenseService,\r\n    private authService:AuthService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private customMessageService: CustomMessageService,\r\n    private translateService:TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n    this.MonthlyRegisterValue = this.monthlyRegister;\r\n    this.getMonthlyRegister(this.MonthlyRegisterValue);\r\n    this.getBudgetInformation();\r\n    this.initializeForm();\r\n  }\r\n\r\n  getMonthlyRegister(monthlyRegister: MonthlyCashRegister | undefined) {\r\n    if (monthlyRegister)\r\n      this.MonthlyRegisterValue = monthlyRegister;\r\n    // this.MonthlyRegisterValue = this.monthlyCashRegisterService.getCurrentMothlyRegister();\r\n\r\n    if (this.MonthlyRegisterValue.monthlyCashRegisterMonth !== undefined\r\n      && this.MonthlyRegisterValue.monthlyCashRegisterYear !== undefined) {\r\n      this.MonthlyRegisterValue.monthString = this.getMonthName(\r\n        this.MonthlyRegisterValue.monthlyCashRegisterMonth\r\n      );\r\n\r\n      // Define month and year only after getMonthlyRegister is successful\r\n      const month = this.MonthlyRegisterValue.monthlyCashRegisterMonth;\r\n      const year = this.MonthlyRegisterValue.monthlyCashRegisterYear;\r\n\r\n      forkJoin([\r\n        this.expenseService.getExpensesAmountOfUserByYearandMonth(month, year - 1),\r\n        this.expenseService.getExpensesAmountOfUserByYearandMonth(month - 1, year - 1),\r\n        this.expenseService.getExpensesAmountOfUserByYearandMonth(month + 1, year - 1),\r\n        this.expenseService.getExpensesAmountOfUserByYearandMonth(month - 1, year),\r\n      ]).subscribe(\r\n        ([result1, result2, result3, result4]) => {\r\n          console.log(result1, result2, result3, result4);\r\n          if (month % 2 === 0) {\r\n            // Even month\r\n            this.monthlyAmountForCalculatingPercentages = result1.data + result2.data;\r\n            this.amountWastedForCalculatingPercentages =\r\n              this.MonthlyRegisterValue.amountInCashRegister + result4.data;\r\n          } else {\r\n            // Odd month\r\n            this.monthlyAmountForCalculatingPercentages = result1.data + result3.data;\r\n            this.amountWastedForCalculatingPercentages =\r\n              this.MonthlyRegisterValue.amountInCashRegister;\r\n          }\r\n          console.log(\r\n            this.amountWastedForCalculatingPercentages,\r\n            this.monthlyAmountForCalculatingPercentages\r\n          );\r\n        },\r\n        (error) => {\r\n          console.error('Error getting expenses data', error);\r\n        }\r\n      );\r\n    }\r\n    (error: any) => {\r\n      console.error('Error getting monthly register data', error);\r\n    }\r\n  }\r\n\r\n  getSpentPercentage(totalAmount: number, annualBudgetCeiling: number): number {\r\n    return (totalAmount / annualBudgetCeiling) * 100;\r\n  }\r\n\r\n  getMonthName(monthNumber: number | undefined): string {\r\n    if(monthNumber == undefined){\r\n      return '';\r\n    }\r\n    return this.translateService.currentLang === 'en-US' ? this.monthNames[monthNumber - 1]:\r\n    this.monthNamesHeb[monthNumber - 1];\r\n  }\r\n\r\n  getBudgetInformation() {\r\n    if(this.currentUser.isManager){\r\n      var departmentId = this.currentUser.departmentId;\r\n    }\r\n    this.budgetInformationService.getBudgetInformation(departmentId).subscribe(\r\n      (data) => {\r\n        this.budgetInformation = data.data;\r\n        if (this.budgetInformation.annualBudget != null) {\r\n          this.budgetType = \"annualBudget\";\r\n        }\r\n        else {\r\n          if (this.budgetInformation.monthlyBudget != null) {\r\n            this.budgetType = \"monthlyBudget\";\r\n          }\r\n          else {\r\n            this.budgetType = \"refundBudget\"\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      },\r\n    );\r\n  }\r\n\r\n  navigateToExpenseReport() {\r\n    // Navigate to the desired route when the button is clicked\r\n    this.router.navigate(['/navbar-secretary/expense-report']);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      refundAmount: new FormControl<number | null>(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  openRefundAmountDialog() {\r\n    this.insertRefundAmountDialog = true;\r\n  }\r\n\r\n  insertRefundAmount() {\r\n    this.validForm = !this.formGroup.invalid;\r\n    if (this.validForm) {\r\n      const refundAmount = this.formGroup.value.refundAmount;\r\n\r\n      this.monthlyCashRegisterService.insertRefundAmount(refundAmount).subscribe(\r\n        (response) =>{\r\n          console.log('insert refund amount succeddfull: ', response);\r\n          this.customMessageService.showSuccessMessage(\"insert refund amount is successfull.\");\r\n          this.formGroup.reset();\r\n          this.insertRefundAmountDialog = false;\r\n          this.MonthlyRegisterValue.refundAmount = this.MonthlyRegisterValue.refundAmount+= refundAmount;\r\n          this.getMonthlyRegister(this.MonthlyRegisterValue); \r\n        },\r\n        (error)=>{\r\n          console.error('An error occurred while insert refund amount: ', error);\r\n          this.customMessageService.showErrorMessage(\"'An error occurred while insert refund amount\");\r\n        }\r\n      )\r\n    }\r\n  };\r\n\r\n}","<div class=\"card flex justify-content-center\">\r\n  <p-toast></p-toast>\r\n  <p-card>\r\n    <h3><span translate>monthlyCashRegister.The monthly cash register for the month of </span>{{ getMonthName(MonthlyRegisterValue?.monthlyCashRegisterMonth)}}</h3>\r\n    <h4><span translate>monthlyCashRegister.The amount of expenses for this month is</span> &#8362;{{MonthlyRegisterValue.amountInCashRegister | number}}</h4>\r\n\r\n    <ng-container *ngIf=\"budgetType === 'annualBudget'\">\r\n      <h5 [ngClass]=\"{\r\n        'orange-text': getSpentPercentage(amountWastedForCalculatingPercentages?? 0, monthlyAmountForCalculatingPercentages ?? 0) > 80 && getSpentPercentage(amountWastedForCalculatingPercentages ?? 0, monthlyAmountForCalculatingPercentages ?? 0) <= 90,\r\n        'red-text': getSpentPercentage(amountWastedForCalculatingPercentages ?? 0, monthlyAmountForCalculatingPercentages ?? 0) > 90\r\n        }\">\r\n        {{ 'monthlyCashRegister.Percentage of Expenses Compared to Last Year' | translate }}:\r\n        {{ getSpentPercentage(amountWastedForCalculatingPercentages ?? 0, monthlyAmountForCalculatingPercentages ?? 0) | number: '1.0-2' }}%\r\n      </h5>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"budgetType === 'monthlyBudget'\">\r\n\r\n    </ng-container>\r\n\r\n    <h5><span translate>monthlyCashRegister.The refund amount is</span> &#8362;{{MonthlyRegisterValue.refundAmount}}</h5>\r\n    <!-- <div>\r\n      <p translate>monthlyCashRegister.Budget ceiling</p>\r\n      <p translate>monthlyCashRegister.youy ar at % of the budget</p>\r\n    </div> -->\r\n    <ng-template pTemplate=\"footer\">\r\n      <p-button styleClass=\"p-button\" (click)=\"navigateToExpenseReport()\" [label]=\"'monthlyCashRegister.view the breakdown of expenses'|translate\"></p-button>\r\n      <p-button *ngIf=\"!currentUser.isManager\" (click)=\"openRefundAmountDialog()\" [label]=\"'monthlyCashRegister.Enter an amount into the cash register'|translate\"></p-button>\r\n    </ng-template>\r\n  </p-card>\r\n</div>\r\n<p-dialog [(visible)]=\"insertRefundAmountDialog\" [style]=\"{ width: '450px' }\" [header]=\"'insertRefundAmount.insert refund amount' | translate\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n  <!-- <div id=\"addMonthlyRegisterForm\"> -->\r\n    <form [formGroup]=\"formGroup\">\r\n      <div class=\"form-group\">\r\n        <p-inputNumber inputId=\"integeronly\" inputId=\"currency-il\" mode=\"currency\" currency=\"ILS\" locale=\"he-IL\" formControlName=\"refundAmount\" [placeholder]=\"'insertRefundAmount.refund amount'|translate\"></p-inputNumber>\r\n        <p *ngIf=\"!validForm\" translate>globalForm.Please fill in all required fields</p>\r\n      </div>\r\n      <div>\r\n        <button class=\"button\" pButton type=\"button\" (click)=\"insertRefundAmount()\">{{ 'insertRefundAmount.insert refund amount' | translate }}</button>\r\n      </div>\r\n    </form>\r\n  <!-- </div> -->\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ExpenseService } from 'src/app/services/expense-service/expense.service';\r\n\r\n@Component({\r\n  selector: 'previous-expenses',\r\n  templateUrl: './previous-expenses.component.html',\r\n  styleUrls: ['./previous-expenses.component.scss']\r\n})\r\nexport class PreviousExpensesComponent implements OnInit{\r\n  formGroup!:FormGroup;\r\n  expenses: any[] = [];\r\n  cols:any[] = [];\r\n  years:any[] = [];\r\n  monthNames: string[] = [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July',\r\n    'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n  monthNamesHeb:string[] = [\r\n    'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי',\r\n    'אוגוס', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'\r\n  ];\r\n\r\n  constructor(\r\n    private expenseService:ExpenseService,\r\n    private router:Router,\r\n    private translateService:TranslateService,\r\n  ){}\r\n  \r\n  ngOnInit(): void {\r\n    const uniqueMonth = this.getUniqueMonths();\r\n    \r\n    this.formGroup = new FormGroup({\r\n      selectedYear: new FormControl<number | null>(new Date().getFullYear()),\r\n    });  \r\n    \r\n    this.formGroup.get('selectedYear')?.valueChanges.subscribe((selectedYear: number) => {\r\n      // Call the function with the selected year\r\n      this.getExpensesByYear(selectedYear);\r\n    });\r\n\r\n    const initiallySelectedYear = this.formGroup.get('selectedYear')?.value;\r\n    if (initiallySelectedYear) {\r\n      this.getExpensesByYear(initiallySelectedYear.toString());\r\n    }\r\n    \r\n    this.cols = [\r\n      {field:'month', header: this.translateService.currentLang === 'en-US' ?'Month':'חודש'},\r\n      {field:'total', header:this.translateService.currentLang === 'en-US'?'Total Expenses':'סכום הוצאות'},\r\n    ];\r\n    \r\n    uniqueMonth.forEach((month) => {\r\n      this.cols.push({\r\n        field: month,\r\n      });\r\n    });\r\n    \r\n    this.years = this.generateYears(2020, new Date().getFullYear());\r\n\r\n    \r\n  }\r\n\r\n  getUniqueMonths(): number[] {\r\n    const validExpenses = this.expenses.filter(expense => expense.expenseDate);\r\n    return Array.from(new Set(validExpenses.map(expense => new Date(expense.expenseDate).getMonth() + 1)));\r\n  }\r\n\r\n\r\n  getExpenseData(): any[] {\r\n    if(this.expenses.length === 0){\r\n      return [];\r\n    }\r\n    const uniqueMonths = this.getUniqueMonths();\r\n  \r\n    // Prepare data for each row\r\n    const dataRows = uniqueMonths.map((month) => {\r\n      const rowData: any = { month: this.getMonthName(month) };\r\n      rowData.total = this.calculateTotalExpensesForMonth(month);\r\n      return rowData;\r\n    });\r\n  \r\n    // Add the total row for the year\r\n    const totalRow: any = { month: 'Total' };\r\n    totalRow.total = this.calculateTotalExpensesForYear();\r\n    dataRows.push(totalRow);\r\n  \r\n    return dataRows;\r\n  }\r\n\r\n  getMonthName(monthNumber: number | undefined): string {\r\n    if(monthNumber == undefined){\r\n      return '';\r\n    }\r\n    return this.translateService.currentLang === 'en-US' ? this.monthNames[monthNumber - 1]:\r\n    this.monthNamesHeb[monthNumber - 1];\r\n  }\r\n\r\n  getMonthNumber(monthName: string): number {\r\n    const monthNames = [\r\n      'January', 'February', 'March', 'April',\r\n      'May', 'June', 'July', 'August',\r\n      'September', 'October', 'November', 'December'\r\n    ];\r\n  \r\n    const monthIndex = monthNames.indexOf(monthName);\r\n  \r\n    // Adding 1 because JavaScript months are zero-based (0 for January)\r\n    return monthIndex !== -1 ? monthIndex + 1 : NaN;\r\n  }\r\n  \r\n  \r\n  calculateTotalExpensesForYear(): string {\r\n    const validExpenses = this.expenses.filter(e => e.expenseDate);\r\n    const totalExpenses = validExpenses.reduce((total, expense) => total + expense.expenseAmount, 0);\r\n  \r\n    // Using toLocaleString to format the number with commas and keeping 2 decimal places\r\n    return totalExpenses.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n  }\r\n  \r\n  \r\n  calculateTotalExpensesForMonth(month: number): string {\r\n    const validExpenses = this.expenses.filter(expense => expense.expenseDate);\r\n    const totalExpenses = validExpenses\r\n      .filter(expense => new Date(expense.expenseDate).getMonth() + 1 === month)\r\n      .reduce((total, expense) => total + expense.expenseAmount, 0);\r\n  \r\n    // Using toLocaleString to format the number with commas and keeping 2 decimal places\r\n    return totalExpenses.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n  }\r\n  \r\n  \r\n\r\n  generateYears(startYear: number, endYear: number): number[] {\r\n    const years = [];\r\n    for (let year = startYear; year <= endYear; year++) {\r\n      years.push(year);\r\n    }\r\n    return years;\r\n  }\r\n\r\n  getExpensesByYear(year: number){\r\n    this.expenseService.getExpensesOfUserByYear(year).subscribe(\r\n      (data) => {\r\n        this.expenses = data.data || [];\r\n        console.log(this.expenses);\r\n      },\r\n      (error) => {\r\n        console.error('An error occurred:', error);\r\n      }       \r\n    )};\r\n  \r\n    showExpensesDetails(selectedYear: number, selectedMonth: number | string) {\r\n      let monthNumber: number;\r\n    \r\n      if (typeof selectedMonth === 'number') {\r\n        // If selectedMonth is already a number, use it directly\r\n        monthNumber = selectedMonth;\r\n      } else {\r\n        // If selectedMonth is a string, convert it to a number using getMonthNumber\r\n        monthNumber = this.getMonthNumber(selectedMonth);\r\n      }\r\n    \r\n      if (!isNaN(monthNumber)) {\r\n        console.log(monthNumber);\r\n        this.router.navigate(['/navbar-secretary/expense-report'],\r\n          { queryParams: { selectedYear, selectedMonth: monthNumber } });\r\n      } else {\r\n        console.error('Invalid month name:', selectedMonth);\r\n      }\r\n    }    \r\n}\r\n    \r\n","<div class=\"card flex justify-content-center selectYear\">\r\n    <form [formGroup]=\"formGroup\">\r\n        <p-dropdown formControlName=\"selectedYear\" [options]=\"years\" [placeholder]=\"'previousExpenses.Select a Year' | translate\"></p-dropdown>\r\n    </form>\r\n</div>\r\n<div class=\"previousExpenseTable\">\r\n    <p-table [columns]=\"cols\" [value]=\"getExpenseData()\" [style]=\"{ 'width': '100%' }\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\">\r\n                    {{ col.header }}\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr *ngIf=\"rowData.month !== 'Total'\">\r\n              <td *ngFor=\"let col of columns; let i = index\" (click)=\"showExpensesDetails(formGroup.get('selectedYear')?.value, rowData['month'])\">\r\n                <ng-container *ngIf=\"i === 1\">\r\n                  <i>₪</i>\r\n                </ng-container>\r\n                {{ rowData[col.field] }}\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"rowData.month === 'Total'\" class=\"total-row\">\r\n              <td *ngFor=\"let col of columns; let i = index\">\r\n                <ng-container *ngIf=\"i === 1\">\r\n                    <i>₪</i>\r\n                  </ng-container>\r\n                {{rowData[col.field]}}\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          \r\n    </p-table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Password } from 'primeng/password';\r\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  signInForm!: FormGroup;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) {\r\n    this.signInForm = this.fb.group({\r\n      username: [''],\r\n      password: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  loginUser() {\r\n    this.authService.signIn(this.signInForm.value);\r\n  }\r\n}\r\n","\r\n<div>\r\n  <h1 translate>Petty cash - Neve Yerushalayim</h1>\r\n  <p-card class=\"card\">\r\n    <h4 translate>Log in</h4>\r\n        <form [formGroup] = \"signInForm\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" pInputText formControlName=\"username\" [placeholder]=\"'username'|translate\"/>\r\n          </div>\r\n          <div class=\"formGroup\">\r\n            <input type=\"password\" pInputText formControlName=\"password\" [placeholder]=\"'password' | translate\"/>\r\n          </div>\r\n            <p-button [label]=\"'Log in'|translate\"  (click)=\"loginUser()\"></p-button>\r\n        </form>\r\n  </p-card>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss'],\r\n})\r\nexport class UserProfileComponent {}\r\n","<p>user-profile works!</p>\r\n","export class MonthlyCashRegister {\r\n  monthlyCashRegisterid: number | undefined;\r\n  updatedBy: string | undefined;\r\n  monthlyCashRegisterName: string | undefined;\r\n  monthlyCashRegisterMonth: number | undefined;\r\n  monthString:string |undefined;\r\n  monthlyCashRegisterYear: number | undefined;\r\n  amountInCashRegister: number = 0;\r\n  refundAmount: number | undefined;\r\n  isActive: boolean | undefined;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdditionalActionsService {\r\n  private baseUrl = 'https://localhost:7139/api/Orchestration';\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  closeMonthlyActivities():Observable<any>{\r\n    const url = `${this.baseUrl}/closeMonthlyActivities`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in CloseMonthlyActivities function', error);\r\n        return(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginUser } from 'src/app/models/loginUser';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Department } from 'src/app/models/department';\r\nimport { UserInfo } from 'src/app/models/userInfo';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n\r\n  endpoint: string = 'https://localhost:7139/api/Account';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  private _isManager: boolean = false;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  //Sign-in\r\n  signIn(user: LoginUser) {\r\n    return this.http\r\n      .post<any>(`${this.endpoint}/login`, user)\r\n      .pipe(catchError((error) => {\r\n        console.error('Login error', error);\r\n        alert('Username or password is incorrect.');\r\n        return throwError(error);\r\n      })\r\n      )\r\n      .subscribe((res: any) => {\r\n        this._isManager = res.isManager;\r\n        localStorage.setItem('access_token', res.token);\r\n        localStorage.setItem('current_user', JSON.stringify(res));\r\n        console.log('currentUser', res);\r\n        this._isManager?\r\n        this.router.navigate(['home-manager']):\r\n        this.router.navigate(['navbar-secretary']);\r\n      });\r\n    }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  getCurrentUser() {\r\n    const userJson = localStorage.getItem('current_user');\r\n    return userJson ? JSON.parse(userJson) : null;\r\n  }\r\n\r\n  updateCurrentUserDepartmentId(departmentId: number) {\r\n    const currentUserJson = localStorage.getItem('current_user');\r\n    if (currentUserJson) {\r\n      const currentUser = JSON.parse(currentUserJson);\r\n      currentUser.departmentId = departmentId;\r\n      localStorage.setItem('current_user', JSON.stringify(currentUser));\r\n    }\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = localStorage.getItem('access_token');\r\n    return authToken != null ? true : false;\r\n  }\r\n\r\n  doLogout() {\r\n    let removeToken = localStorage.removeItem('access_token');\r\n    if (removeToken == null) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  GetUserIdFromToken(): string | null {\r\n    const token = this.getToken();\r\n    if (token == null) {\r\n      return null;\r\n    }\r\n    const payload = token.split('.')[1];\r\n    const payloadDecodedJson = window.atob(payload);\r\n    const payloadDecoded = JSON.parse(payloadDecodedJson);\r\n    return payloadDecoded.jti;\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      //clientSideError\r\n      msg = error.error.message;\r\n    } else {\r\n      //server-side error\r\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: 'Bearer ' + authToken,\r\n      },\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\nimport { AuthService } from '../auth-service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BudgetImformationService {\r\n  private baseUrl = 'https://localhost:7139/api/BudgetType';\r\n  constructor(private http:HttpClient, private authService:AuthService) { }\r\n\r\n\r\n  getBudgetType():Observable<any>{\r\n    const budgetTypeId = this.authService.getCurrentUser().department.currentBudgetTypeId;\r\n    console.log(budgetTypeId);\r\n    const url = `${this.baseUrl}/getBudgetTypeById/${budgetTypeId}`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error)=>{\r\n        console.error('Error in GetEvenetsByUser function', error);\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n\r\n    getBudgetInformation(departmentId?: number): Observable<any> {\r\n      let url = `${this.baseUrl}/getBudgetInformation`;\r\n      if (departmentId !== undefined && departmentId !== null) {\r\n        url += `?departmentIdFromAdmin=${departmentId}`;\r\n      }\r\n      return this.http.get<any>(url).pipe(\r\n        catchError((error) => {\r\n          console.error('Error in getBudgetInformation function', error);\r\n          return throwError(error);\r\n        }),\r\n      );\r\n    }\r\n    \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BudgetTypeService {\r\n  private baseUrl = 'ttps://localhost:7139/api/BudgetType';\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getBudgetTypes():Observable<any>{\r\n    const url = `${this.baseUrl}/getBudgetTypeList`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error)=>{\r\n        console.error('Error in GetBudgetTypes function',error);\r\n        return throwError(error)\r\n      }),\r\n    )\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BuyerService {\r\n  private baseUrl = 'https://localhost:7139/api/Buyer';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getBuyers(): Observable<any> {\r\n    const url = `${this.baseUrl}/getBuyers`;\r\n    return this.http.get<any>(url);\r\n  }\r\n}\r\n","// custom-message.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomMessageService {\r\n  constructor(private messageService: MessageService) {}\r\n\r\n  showSuccessMessage(message: string): void {\r\n    this.messageService.add({\r\n      severity: 'success',\r\n      summary: 'Success',\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  showErrorMessage(message: string): void {\r\n    this.messageService.add({\r\n      severity: 'error',\r\n      summary: 'Error',\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  showRejectedMessage(message: string): void {\r\n    this.messageService.add({\r\n      severity: 'error',\r\n      summary: 'Rejected',\r\n      detail: message,\r\n      life: 3000,\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DepartmentService {\r\n  private baseUrl = 'https://localhost:7139/api/Department';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  saveSelectedDepartmentToLocalStorage(response:any){\r\n    const responseString = JSON.stringify(response.data);\r\n    localStorage.setItem('selected_department', responseString)\r\n  }\r\n  deactivateSelectedDepartment() {\r\n    localStorage.removeItem('selected_department');\r\n  }\r\n\r\n  getSelectedDepartment(): any | null {\r\n    const storedResponseString = localStorage.getItem('selected_department');\r\n\r\n    if (storedResponseString) {\r\n      return JSON.parse(storedResponseString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getAllDepartments():Observable<any>{\r\n    const url = `${this.baseUrl}/getDepartments`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in getAllDepartments function', error);\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getDepartmentById(id: number): Observable<any> {\r\n    const url = `${this.baseUrl}/GetDepartmentById/${id}`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EventCategory } from 'src/app/models/eventCategory';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventCategoryService {\r\n  private baseUrl = 'https://localhost:7139/api/EventCategory';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEventsCategories(): Observable<any> {\r\n    return this.http.get<EventCategory>(\r\n      `${this.baseUrl}/getEventCategoriesAsync`,\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Event } from 'src/app/models/event';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventService {\r\n  private baseUrl = 'https://localhost:7139/api/Event';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addNewEvent(newEvent:any):Observable<boolean>{\r\n    const url = `${this.baseUrl}/createEvent`;\r\n    return this.http.post<any>(url, newEvent).pipe(\r\n      catchError((error) => {\r\n        console.error('Error in addNewEvents function:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  getEventsByUser():Observable<any>{\r\n    const url = `${this.baseUrl}/getEventsByUserAndMonth`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error)=>{\r\n        console.error('Error in GetEvenetsByUser function', error);\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpenseCategoryService {\r\n  private baseUrl = 'https://localhost:7139/api/ExpenseCategory';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllExpenseCategories(): Observable<any> {\r\n    const url = `${this.baseUrl}/getAllExpensesCategory`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  deleteExpenseCategory(expenseCategoryId:number):Observable<any>{\r\n    const url = `${this.baseUrl}/deleteExpenseCategory/${expenseCategoryId}`;\r\n    return this.http.delete<any>(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NewExpenseModel } from '../../models/expense';\r\nimport { catchError } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseReportInfoService {\r\n  private baseUrl = \"https://localhost:7139/api/ExpenseMoreInfo\"\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n   getExpenseReportOfUser():Observable<any>{\r\n    const url =`${this.baseUrl}/getExpensesReportOfCurrentMonth`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in GetExpensesReportOfUser function', error)\r\n        return throwError(error)\r\n      }),\r\n    );\r\n   }\r\n\r\n   getExpensesReportByYearAndMonth(year:number, month:number, departmentId?:number):Observable<any>{\r\n    let url = `${this.baseUrl}/getExpensesByYearAndMonth/${year}/${month}`;\r\n    if (departmentId !== undefined && departmentId !== null) {\r\n      url += `?departmentId=${departmentId}`;\r\n    }\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in getExpensesReportByYearAndMonth function', error)\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NewExpenseModel } from '../../models/expense';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExpenseService {\r\n  private baseUrl = 'https://localhost:7139/api/Expense';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // getExpensesOfUser(): Observable<any> {\r\n  //   const url = `${this.baseUrl}/GetExpensesOfUser`;\r\n  //   return this.http.get<any>(url).pipe(\r\n  //     catchError((error) =>{\r\n  //       console.error('Error in GetExpensesOfUser function', error)\r\n  //       return throwError(error)\r\n  //     }),\r\n  //   );\r\n  // }\r\n\r\n  getExpensesOfUserByYear(year:number): Observable<any> {\r\n    const url = `${this.baseUrl}/GetExpensesOfUserByYear/${year}`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in GetExpensesOfUserByYear function', error)\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n\r\n  getExpensesAmountOfUserByYearandMonth(month:number, year:number): Observable<any> {\r\n    const url = `${this.baseUrl}/GetExpensesAmountForMonth/${month}/${year}`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in GetExpensesOfUserByYear function', error)\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n\r\n  GetUnapprovedExpensesByUserAsync(): Observable<any> {\r\n    const url = `${this.baseUrl}/GetUnapprovedExpensesByUserAsync`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) =>{\r\n        console.error('Error in GetExpensesOfUser function', error)\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n\r\n\r\n  getAllExpenses(): Observable<any> {\r\n    const url = `${this.baseUrl}/getAllExpenses`\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  updateExpense(updatedExpense: NewExpenseModel): Observable<any> {\r\n    const url = `${this.baseUrl}/UpdateExpense`;\r\n    return this.http.put<NewExpenseModel>(url, updatedExpense).pipe(\r\n      catchError((error)=>{\r\n        console.error('Error in updateExpense function', error);\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n\r\n  deleteExpense(id: number): Observable<any> {\r\n    const url = `${this.baseUrl}/DeleteExpense/${id}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  addNewExpense(newExpense:NewExpenseModel):Observable<any>{\r\n    const url = `${this.baseUrl}/createExpense`;\r\n    return this.http.post<NewExpenseModel>(url, newExpense).pipe(\r\n      catchError((error)=>{\r\n        console.error('Error in addNewExpense function', error);\r\n        return throwError(error)\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from '../auth-service/auth.service';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MontlyCashRegisterService {\r\n  private baseUrl =\r\n    'https://localhost:7139/api/MonthlyCashRegister';\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getCurrentMontlyCashRegisterByUserId(departmentId?: number): Observable<any> {\r\n    let url = `${this.baseUrl}/getMonthlyCashRegistersByUserId`;\r\n    if (departmentId !== undefined && departmentId !== null) {\r\n      url += `?departmentId=${departmentId}`;\r\n    }\r\n    return this.http.get<any>(url).pipe(\r\n      tap((response) => {\r\n        if (Array.isArray(response)) {\r\n          // If response is an array, apply saveResponseToLocalStorage to each item\r\n          response.forEach((item: any) => this.saveResponseToLocalStorage(item));\r\n        } else {\r\n          // If response is a single object, apply saveResponseToLocalStorage to it\r\n          this.saveResponseToLocalStorage(response);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        console.error('Error in getMontlyCashRegister function:', error);\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n\r\n  saveResponseToLocalStorage(response: any) {\r\n    const responseString = JSON.stringify(response.data);\r\n    localStorage.setItem('current_monthlyCashRegister', responseString)\r\n  }\r\n  deactivateMonthlyCashRegister() {\r\n    localStorage.removeItem('current_monthlyCashRegister');\r\n  }\r\n\r\n  getCurrentMothlyRegister(): any | null {\r\n    const storedResponseString = localStorage.getItem('current_monthlyCashRegister');\r\n\r\n    if (storedResponseString) {\r\n      return JSON.parse(storedResponseString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addMonthlyRegister(newMonthlyRegister: any): Observable<boolean> {\r\n    const url = `${this.baseUrl}/createNewMonthlyCashRegister`;\r\n    return this.http.post<any>(url, newMonthlyRegister).pipe(\r\n      catchError((error) => {\r\n        console.error('Error in addNewEvents function:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  insertRefundAmount(refundAmount: number): Observable<boolean> {\r\n    const url = `${this.baseUrl}/insertRefundAmount/${refundAmount}`;\r\n    return this.http.get<any>(url).pipe(\r\n      catchError((error) => {\r\n        console.error('Error in insertRefundAmount function:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":["RouterModule","ChooseLanguageComponent","HomeSecretaryComponent","AddEventComponent","AddExpenseComponent","ExpenseReportComponent","SignInComponent","NavbarComponent","PreviousExpensesComponent","HomeManagerComponent","NavbarManagerComponent","CloseMonthlyActivitiesComponent","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectedLanguage","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassProp","BrowserModule","HttpClientModule","HttpClient","HTTP_INTERCEPTORS","TranslateModule","TranslateLoader","TranslateHttpLoader","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","MatIconModule","ButtonModule","TableModule","DialogModule","PaginatorModule","ToastModule","TabMenuModule","InputTextModule","DropdownModule","InputNumberModule","CalendarModule","TabViewModule","CardModule","PasswordModule","ScrollerModule","OrderListModule","ConfirmPopupModule","ListboxModule","ConfirmationService","MessageService","MonthlyCashRegisterComponent","BudgetInformationComponent","ExpensesReportPreviousMonthsComponent","CreateUpdateEventCategoryComponent","UserProfileComponent","AuthService","AuthInterceptor","CustomMessageService","AddMonthlyCashRegisterComponent","ChooseDepartmentComponent","AddDepartmentComponent","AddExpenseCategoryComponent","HttpLoaderFactory","http","AppModule","bootstrap","provide","useClass","multi","loader","useFactory","deps","declarations","FormControl","Validators","ɵɵtext","ɵɵtemplate","AddDepartmentComponent_div_3_small_6_Template","AddDepartmentComponent_div_3_small_11_Template","AddDepartmentComponent_div_3_small_16_Template","AddDepartmentComponent_div_3_small_21_Template","AddDepartmentComponent_div_3_small_26_Template","AddDepartmentComponent_div_3_small_31_Template","AddDepartmentComponent_div_3_small_36_Template","AddDepartmentComponent_div_3_small_41_Template","AddDepartmentComponent_div_3_p_43_Template","ɵɵlistener","AddDepartmentComponent_div_3_Template_button_click_44_listener","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","saveDepartment","ɵɵadvance","ɵɵproperty","ctx_r0","formGroup","ɵɵpipeBind1","isInvalid","ɵɵstyleMap","ɵɵpureFunction0","_c0","budgetTypeList","validForm","ɵɵtextInterpolate","formBuilder","budgetTypeService","departmentService","departmentDialog","ngOnInit","initializeForm","loadBudgetType","getBudgetTypes","subscribe","data","error","id","name","console","controlName","control","get","touched","invalid","group","departmentName","required","departmentCode","deptHeadFirstName","deptHeadLastName","phonePerfix","phoneNumber","descreption","budgetTypeId","addDepartment","_this","_asyncToGenerator","newDepartment","ɵɵdirectiveInject","FormBuilder","i2","BudgetTypeService","i3","DepartmentService","consts","AddDepartmentComponent_Template","AddDepartmentComponent_Template_button_click_0_listener","AddDepartmentComponent_Template_p_dialog_visibleChange_2_listener","$event","AddDepartmentComponent_div_3_Template","_c1","AddExpenseCategoryComponent_div_5_ng_template_5_Template_div_click_2_listener","restoredCtx","_r7","expenseCategory_r5","$implicit","ctx_r6","deleteExpenseCategory","AddExpenseCategoryComponent_div_5_Template_p_listbox_ngModelChange_4_listener","_r9","ctx_r8","selectedExpenseCategory","AddExpenseCategoryComponent_div_5_ng_template_5_Template","existingExpensesCategory","expenseCategoryService","confirmationService","customMessageService","expenseCategoryDialog","loadExpensesCategory","addExpenseCategory","getAllExpenseCategories","log","expenseCategoryName","expenseCategoryCode","event","expenseCategory","expenseCategoryIdToDelete","confirm","target","message","icon","acceptButtonStyleClass","accept","showSuccessMessage","filter","val","showErrorMessage","reject","showRejectedMessage","saveExpenseCategory","ExpenseCategoryService","i4","AddExpenseCategoryComponent_Template","AddExpenseCategoryComponent_Template_button_click_0_listener","AddExpenseCategoryComponent_Template_p_dialog_visibleChange_3_listener","AddExpenseCategoryComponent_div_5_Template","AddExpenseCategoryComponent_small_14_Template","AddExpenseCategoryComponent_small_19_Template","AddExpenseCategoryComponent_p_21_Template","AddExpenseCategoryComponent_Template_button_click_22_listener","_c2","FormGroup","router","authService","departments","loadDepartments","getAllDepartments","selectedDepartment","onDropdownChange","value","saveSelectedDepartmentToLocalStorage","updateCurrentUserDepartmentId","departmentId","navigate","Router","ChooseDepartmentComponent_Template","ChooseDepartmentComponent_Template_p_dropdown_onChange_2_listener","HomeManagerComponent_Template","dropdownOptions","label","loadDetails","getSelectedDepartment","currentUser","getCurrentUser","isActiveRoute","route","isActive","onActiveItemChange","activeItem","logOut","deactivateSelectedDepartment","NavbarManagerComponent_Template","NavbarManagerComponent_Template_i_click_19_listener","ɵɵpureFunction1","username","AddEventComponent_div_15_ng_template_3_Template_button_click_5_listener","_r6","event_r4","ctx_r5","addExpenseToSelectedEvent","eventName","AddEventComponent_div_15_ng_template_3_Template","ctx_r2","existingEvents","translateService","eventService","eventCategoryService","monthlyCashRegisterService","eventCategories","initiallySelectedEvent","isMonthlyCashRegister","loadExistingEvents","loadEventCategories","isMonthlyRegister","isMonthlyRegisterSet","getCurrentMothlyRegister","getEventsCategories","getEventsByUser","getOptionLabel","currentLang","selectedEventCategory","addEvent","currentMonth","monthlyCashRegisterMonth","newEvent","eventId","eventMonth","eventCategoryId","updatedBy","addNewEvent","response","reset","selectedEvent","queryParams","JSON","stringify","TranslateService","EventService","EventCategoryService","i5","i6","i7","MontlyCashRegisterService","AddEventComponent_Template","AddEventComponent_div_0_Template","AddEventComponent_p_11_Template","AddEventComponent_Template_button_click_12_listener","AddEventComponent_div_15_Template","AddExpenseComponent_div_4_small_4_Template","ctx_r1","events","buyerService","expenseService","activedRoute","expensesCategory","buyers","isEvents","minDateValue","Date","maxDateValue","params","selectedEventString","selectedEventParams","parse","undefined","loadUser","loadEvents","loadExpenseCategories","loadBuyers","setMinMaxDates","year","getFullYear","month","firstDayOfMonth","Number","lastDayOfMonth","length","getBuyers","dropdownType","translationKey","addExpense","refundMonth","selectedBuyer","expenseAmount","expenseDate","storeName","notes","newExpenseModel","expenseId","buyerId","eventsId","expenseCategoryId","toISOString","isApproved","isLocked","invoiceScan","addNewExpense","cancelExpense","BuyerService","ExpenseService","ActivatedRoute","i8","i9","AddExpenseComponent_Template","AddExpenseComponent_div_0_Template","AddExpenseComponent_div_4_Template","AddExpenseComponent_small_9_Template","AddExpenseComponent_small_14_Template","AddExpenseComponent_small_19_Template","AddExpenseComponent_small_24_Template","AddExpenseComponent_p_31_Template","AddExpenseComponent_Template_button_click_33_listener","AddExpenseComponent_Template_button_click_37_listener","months","addMonthlyRegisterDialog","loadMonths","currentDate","getMonth","monthNames","Array","from","_","index","currentYear","selectedMonth","addMonthlyRegister","saveMonthlyRegister","selectedMonthValue","newMonthlyRegister","monthlyCashRegisterId","monthlyCashRegisterName","monthlyCashRegisterYear","amountInCashRegister","refundAmount","toPromise","currentMonthlyCashRegisterResponse","getCurrentMontlyCashRegisterByUserId","AddMonthlyCashRegisterComponent_Template","AddMonthlyCashRegisterComponent_Template_button_click_0_listener","AddMonthlyCashRegisterComponent_Template_p_dialog_visibleChange_2_listener","AddMonthlyCashRegisterComponent_p_12_Template","AddMonthlyCashRegisterComponent_Template_button_click_13_listener","ɵɵpropertyInterpolate","MonthlyCashRegister","additionalActionsService","MonthlyRegisterValue","getMonthlyRegister","currentUsr","closeMonthlyActivities","isManager","respose","deactivateMonthlyCashRegister","AdditionalActionsService","CloseMonthlyActivitiesComponent_Template","styles","CreateUpdateEventCategoryComponent_Template","monthlyRegister_r2","monthlyRegisters","isLoggedIn","loadCurrentMonthlyCashRegister","success","push","HomeSecretaryComponent_Template","HomeSecretaryComponent_div_2_Template","HomeSecretaryComponent_add_monthly_cash_register_3_Template","doLogout","NavbarComponent_Template","NavbarComponent_Template_i_click_25_listener","department","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate2","budgetInformation","budgetType","budgetTypeName","annualBudget","annualBudgetCeiling","totalAmount","ɵɵpureFunction2","getSpentPercentage","tmp_2_0","ɵɵpipeBind2","tmp_3_0","tmp_4_0","monthlyBudget","monthlyBudgetCeiling","budgetInformationService","getBudgetInformation","getBudgetType","budgetTypeNameHeb","BudgetImformationService","BudgetInformationComponent_Template","BudgetInformationComponent_ng_container_4_Template","BudgetInformationComponent_ng_container_5_Template","BudgetInformationComponent_ng_container_6_Template","DOCUMENT","ducument","renderer","setDefaultLang","use","changeLanguage","lang","body","querySelector","removeClass","addClass","Renderer2","ChooseLanguageComponent_Template","ChooseLanguageComponent_Template_button_click_3_listener","ChooseLanguageComponent_Template_button_click_5_listener","ExpenseReportComponent_button_1_Template_button_click_0_listener","_r5","ctx_r4","confirmExpenses","ExpenseReportComponent_ng_template_6_td_17_Template_button_click_2_listener","_r10","expense_r6","editExpense","ExpenseReportComponent_ng_template_6_td_17_Template_button_click_3_listener","ctx_r11","deleteExpense","ExpenseReportComponent_ng_template_6_td_17_Template","expense","buyerName","ExpenseReportComponent_div_9_small_6_Template","ExpenseReportComponent_div_9_small_11_Template","ExpenseReportComponent_div_9_small_16_Template","ExpenseReportComponent_div_9_small_21_Template","ExpenseReportComponent_div_9_small_26_Template","ExpenseReportComponent_div_9_p_33_Template","ExpenseReportComponent_div_9_Template_button_click_35_listener","_r20","ctx_r19","updateExense","ExpenseReportComponent_div_9_Template_button_click_39_listener","ctx_r21","hideDialog","ctx_r3","expenseReportInfoService","expenses","expenseDialog","submitted","monthlyRegister","isArray","earliestRegister","reduce","earliest","current","loadExpensesByYearAndMonth","selectedYear","getExpensesReportByYearAndMonth","expenseIdToDelete","instant","loadData","find","e","b","ec","setValue","_this2","Promise","all","expenseIdToUpdate","updatedExpense","updateExpense","resolve","ExpenseReportInfoService","i10","i11","ExpenseReportComponent_Template","ExpenseReportComponent_button_1_Template","ExpenseReportComponent_ng_template_5_Template","ExpenseReportComponent_ng_template_6_Template","ExpenseReportComponent_Template_p_dialog_visibleChange_7_listener","ExpenseReportComponent_div_9_Template","ExpensesReportPreviousMonthsComponent_Template","forkJoin","tmp_0_0","amountWastedForCalculatingPercentages","monthlyAmountForCalculatingPercentages","tmp_1_0","ɵɵelementContainer","MonthlyCashRegisterComponent_ng_template_18_p_button_2_Template_p_button_click_0_listener","openRefundAmountDialog","MonthlyCashRegisterComponent_ng_template_18_Template_p_button_click_0_listener","_r8","ctx_r7","navigateToExpenseReport","MonthlyCashRegisterComponent_ng_template_18_p_button_2_Template","insertRefundAmountDialog","monthNamesHeb","monthString","getMonthName","getExpensesAmountOfUserByYearandMonth","result1","result2","result3","result4","monthNumber","insertRefundAmount","inputs","MonthlyCashRegisterComponent_Template","MonthlyCashRegisterComponent_ng_container_12_Template","MonthlyCashRegisterComponent_ng_container_13_Template","MonthlyCashRegisterComponent_ng_template_18_Template","MonthlyCashRegisterComponent_Template_p_dialog_visibleChange_19_listener","MonthlyCashRegisterComponent_p_25_Template","MonthlyCashRegisterComponent_Template_button_click_27_listener","ɵɵtextInterpolate1","col_r4","header","PreviousExpensesComponent_ng_template_6_th_1_Template","columns_r2","PreviousExpensesComponent_ng_template_7_tr_0_td_1_Template_td_click_0_listener","_r14","rowData_r5","ctx_r13","tmp_b_0","showExpensesDetails","PreviousExpensesComponent_ng_template_7_tr_0_td_1_ng_container_1_Template","i_r11","col_r10","field","PreviousExpensesComponent_ng_template_7_tr_0_td_1_Template","columns_r6","PreviousExpensesComponent_ng_template_7_tr_1_td_1_ng_container_1_Template","i_r20","col_r19","PreviousExpensesComponent_ng_template_7_tr_1_td_1_Template","PreviousExpensesComponent_ng_template_7_tr_0_Template","PreviousExpensesComponent_ng_template_7_tr_1_Template","cols","years","uniqueMonth","getUniqueMonths","valueChanges","getExpensesByYear","initiallySelectedYear","toString","forEach","generateYears","validExpenses","Set","map","getExpenseData","uniqueMonths","dataRows","rowData","total","calculateTotalExpensesForMonth","totalRow","calculateTotalExpensesForYear","getMonthNumber","monthName","monthIndex","indexOf","NaN","totalExpenses","toLocaleString","minimumFractionDigits","maximumFractionDigits","startYear","endYear","getExpensesOfUserByYear","isNaN","PreviousExpensesComponent_Template","PreviousExpensesComponent_ng_template_6_Template","PreviousExpensesComponent_ng_template_7_Template","fb","signInForm","password","loginUser","signIn","SignInComponent_Template","SignInComponent_Template_p_button_click_13_listener","UserProfileComponent_Template","catchError","baseUrl","url","pipe","ɵɵinject","factory","ɵfac","providedIn","throwError","HttpHeaders","endpoint","headers","set","_isManager","user","post","alert","res","localStorage","setItem","token","getToken","getItem","userJson","currentUserJson","authToken","removeToken","removeItem","GetUserIdFromToken","payload","split","payloadDecodedJson","window","atob","payloadDecoded","jti","handleError","msg","ErrorEvent","status","intercept","req","next","clone","setHeaders","Authorization","handle","currentBudgetTypeId","messageService","add","severity","summary","detail","life","responseString","storedResponseString","getDepartmentById","delete","getExpenseReportOfUser","GetUnapprovedExpensesByUserAsync","getAllExpenses","put","newExpense","tap","item","saveResponseToLocalStorage","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}